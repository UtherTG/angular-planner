{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-time-planner.js","webpack:///webpack/bootstrap 36e8775d23e5896321da","webpack:///./src/timePlannerLocales/time-planner-locale_en-us.js","webpack:///./src/timePlannerCell/timePlannerCellDirective.js","webpack:///./src/timePlannerContainer/timePlannerContainerDirective.js","webpack:///./src/timePlannerRow/timePlannerRowDirective.js","webpack:///./~/angular-native-dragdrop/draganddrop.js","webpack:///./~/angular-native-dragdrop/index.js","webpack:///./src/angular-time-planner.js","webpack:///./~/deepmerge/dist/cjs.js","webpack:///./src/timePlannerCell/timePlannerCellTemplate.html","webpack:///./src/timePlannerContainer/timePlannerContainerTemplate.html","webpack:///./src/timePlannerRow/timePlannerRowTemplate.html","webpack:///./src/timePlannerLocales ^\\.\\/time\\-planner\\-locale_.*$"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","labels","rowTitle","counterTitle","days","hours","_timePlannerCellTemplate","_timePlannerCellTemplate2","obj","default","angular","directive","$rootScope","link","scope","onHoverEvent","item","$parent","highlightedItem","onClickEvent","$broadcast","restrict","template","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","arr2","length","from","_timePlannerContainerTemplate","_timePlannerContainerTemplate2","_deepmerge","_deepmerge2","$locale","LOCALES","options","rows","controller","$scope","_init","_defaultOptions","locale","_localeId","segments","_getSegments","timeScope","_getHours","_getWeekDays","push","week","DATETIME_FORMATS","SHORTDAY","concat","splice","firstDay","AVAILABLE","includes","id","DEFAULT","needCounter","editable","dropChannel","$watchCollection","onDropEvent","rowId","_timePlannerRowTemplate","_timePlannerRowTemplate2","_prepareItems","row","forEach","items","_methods","fillSegments","_fillSegmentsForWeek","schedule","scheduledStart","Date","scheduled_start","scheduledEnd","scheduled_end","itemLength","firstDayNumber","setHours","_setBoundaries","getDay","Math","ceil","abs","getTime","_fillSegmentsForDay","firstHour","getHours","getMinutes","to","day","determineEffectAllowed","e","originalEvent","dataTransfer","dropEffect","effectAllowed","ctrlKey","document","createElement","$parse","$dragImage","element","attrs","dragendHandler","setTimeout","unbind","sendChannel","dragChannel","onDropSuccess","onDropSuccessFn","$evalAsync","$event","onDropFailure","onDropFailureFn","removeClass","draggingClass","setDragElement","dragImageElementId","dragImageElementFn","$apply","dragElement","elementId","isString","getElementById","setDragImage","dragstartHandler","isDragHandleUsed","dragTarget","classList","contains","dragHandleClass","dragData","drag","$eval","dragImage","addClass","bind","hasNativeDraggable","uniqueID","window","opera","dragImageFn","dragImageParameters","generate","image","xOffset","yOffset","offset","x","offsetX","y","offsetY","transferDataObject","data","channel","transferDataText","toJson","setData","preventDefault","attr","$watch","uiDraggable","newValue","removeAttr","trim","target","calculateDropOffset","offsetLeft","offsetTop","offsetParent","onDragOver","stopPropagation","uiOnDragOverFn","uiOnDragOver","$channel","onDragLeave","dragging","customDragLeaveEvent","dragEnterClass","dragHoverClass","uiOnDragLeaveFn","uiOnDragLeave","onDragEnter","customDragEnterEvent","uiOnDragEnterFn","uiOnDragEnter","onDrop","sendData","getData","fromJson","dropOffset","position","uiOnDropFn","uiOnDrop","$data","$position","isDragChannelAccepted","RegExp","test","preventNativeDnD","deregisterDragStart","$on","_","valid","dropValidate","$drop","deregisterDragEnd","$observe","constant","height","width","padding","font","fontColor","backgroundColor","service","defaultConfig","fitString","canvas","text","config","measureText","substring","ELLIPSIS","extend","el","getContext","fillStyle","fillRect","title","fillText","Image","src","toDataURL","isNonNullObject","isSpecial","stringValue","toString","isReactElement","$$typeof","REACT_ELEMENT_TYPE","emptyTarget","val","cloneIfNecessary","optionsArgument","clone","isMergeableObject","deepmerge","defaultArrayMerge","source","destination","slice","indexOf","mergeObject","keys","key","sourceIsArray","targetIsArray","arrayMerge","canUseSymbol","Symbol","for","all","array","Error","reduce","prev","next","deepmerge_1","webpackContext","req","webpackContextResolve","map","./time-planner-locale_en-us","./time-planner-locale_en-us.js","resolve"],"mappings":"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","file":"angular-time-planner.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularTimePlanner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularTimePlanner\"] = factory();\n\telse\n\t\troot[\"angularTimePlanner\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularTimePlanner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularTimePlanner\"] = factory();\n\telse\n\t\troot[\"angularTimePlanner\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 7);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  labels: {\n    rowTitle: 'Tasks',\n    counterTitle: {\n      days: 'Days',\n      hours: 'Hours'\n    }\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerCellTemplate = __webpack_require__(9);\n\nvar _timePlannerCellTemplate2 = _interopRequireDefault(_timePlannerCellTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('timePlannerCellDirective', []).directive('timePlannerCell', ['$rootScope', function ($rootScope) {\n  var link = function link(scope) {\n    // Scope functions\n    scope.onHoverEvent = function (item) {\n      scope.$parent.highlightedItem = item;\n    };\n    scope.onClickEvent = function (item) {\n      return $rootScope.$broadcast('ATP_SEGMENT_ON_CLICK', item);\n    };\n  };\n\n  return {\n    restrict: 'A',\n    template: _timePlannerCellTemplate2.default,\n    link: link\n  };\n}]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerContainerTemplate = __webpack_require__(10);\n\nvar _timePlannerContainerTemplate2 = _interopRequireDefault(_timePlannerContainerTemplate);\n\nvar _deepmerge = __webpack_require__(8);\n\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\n\n__webpack_require__(6);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('timePlannerContainerDirective', ['ang-drag-drop']).directive('timePlannerContainer', ['$rootScope', '$locale', 'LOCALES', function ($rootScope, $locale, LOCALES) {\n  var controller = function controller($scope) {\n    var _localeId = LOCALES.AVAILABLE.includes($locale.id) ? $locale.id : LOCALES.DEFAULT,\n        _defaultOptions = {\n      timeScope: 'week',\n      needCounter: false,\n      editable: false,\n      dropChannel: 'atp-row'\n    };\n\n    _init();\n    $scope.$watchCollection('options', _init);\n\n    // Scope functions\n    $scope.onDropEvent = function (item, rowId) {\n      return $rootScope.$broadcast('ATP_ITEM_ON_DROP', { id: rowId, item: item });\n    };\n\n    function _init() {\n      // I use private variables since we're not changing options from inside and it's easier to watch and merge scope\n\n      // merge defaults with user options\n      $scope.options = (0, _deepmerge2.default)(_defaultOptions, $scope.options);\n      // we use an object with merged default locale and scope override(if any)\n      $scope.locale = (0, _deepmerge2.default)(__webpack_require__(12)(\"./time-planner-locale_\" + _localeId), $scope.options.locale || {});\n      // fill segments for current options\n      $scope.segments = _getSegments();\n    }\n\n    // Get segments for planner, hours, week, dates range. Default is a week.\n    function _getSegments() {\n      switch ($scope.options.timeScope) {\n        case 'day':\n          return _getHours();\n          break;\n        case 'range':\n          // reserved for future use\n          break;\n        case 'week':\n        default:\n          return _getWeekDays();\n      }\n    }\n\n    // Method to generate hours labels\n    function _getHours() {\n      var hours = [];\n\n      for (var i = 0; i < 24; i++) {\n        hours.push(i);\n      }\n\n      return hours;\n    }\n\n    // Method to generate week days labels\n    // I use only days from locales. First day of the week is the same as Date() (0 - Sun)\n    function _getWeekDays() {\n      var week = [].concat(_toConsumableArray($locale.DATETIME_FORMATS.SHORTDAY)),\n          alteredWeek = week.splice($scope.options.firstDay || 0, week.length);\n      return [].concat(_toConsumableArray(alteredWeek), _toConsumableArray(week));\n    }\n  };\n\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      rows: '='\n    },\n    controller: controller,\n    template: _timePlannerContainerTemplate2.default\n  };\n}]);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerRowTemplate = __webpack_require__(11);\n\nvar _timePlannerRowTemplate2 = _interopRequireDefault(_timePlannerRowTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('timePlannerRowDirective', []).directive('timePlannerRow', function () {\n  var controller = function controller($scope) {\n    var _methods = {\n      week: {\n        fillSegments: _fillSegmentsForWeek\n      },\n      day: {\n        fillSegments: _fillSegmentsForDay\n      }\n    };\n\n    // INIT\n    _prepareItems();\n    $scope.$watchCollection('options', _prepareItems);\n\n    // Generate segments for each row\n    function _prepareItems() {\n      $scope.row.segments = [];\n      $scope.row.hours = 0;\n      $scope.$parent.segments.forEach(function () {\n        return $scope.row.segments.push([]);\n      });\n      $scope.row.items.forEach(_methods[$scope.$parent.options.timeScope].fillSegments);\n    }\n\n    // Fill each segment with items. This method is solely for week time scope\n    function _fillSegmentsForWeek(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength = void 0,\n          firstDayNumber = void 0;\n\n      schedule.scheduledStart.setHours(0, 0, 0, 0);\n      schedule.scheduledEnd.setHours(23, 59, 59, 999);\n\n      schedule = _setBoundaries(schedule);\n      firstDayNumber = schedule.scheduledStart.getDay();\n\n      itemLength = Math.ceil(Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay));\n\n      $scope.row.hours += itemLength * 8;\n\n      for (var i = 0; i < itemLength; i++) {\n        $scope.row.segments[firstDayNumber + i].push(item);\n      }\n    }\n\n    // Fill each segment with items. This method is solely for day time scope\n    function _fillSegmentsForDay(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          itemLength = void 0,\n          firstHour = void 0;\n\n      schedule = _setBoundaries(schedule);\n      firstHour = schedule.scheduledStart.getHours();\n      itemLength = schedule.scheduledEnd.getHours() - schedule.scheduledStart.getHours() + (schedule.scheduledEnd.getMinutes() === 0 ? 0 : 1); // if it ends with 00 - we don't count that hour\n\n      $scope.row.hours += itemLength;\n\n      for (var i = 0; i < itemLength; i++) {\n        $scope.row.segments[firstHour + i].push(item);\n      }\n    }\n\n    // Set boundaries for item inside the planner\n    function _setBoundaries(schedule) {\n      schedule.scheduledStart = schedule.scheduledStart < $scope.$parent.options.from ? new Date($scope.$parent.options.from) : schedule.scheduledStart;\n\n      schedule.scheduledEnd = schedule.scheduledEnd > $scope.$parent.options.to ? new Date($scope.$parent.options.to) : schedule.scheduledEnd;\n\n      return schedule;\n    }\n  };\n\n  return {\n    restrict: 'A',\n    template: _timePlannerRowTemplate2.default,\n    controller: controller\n  };\n});\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n(function(angular) {\n    'use strict';\n\n    function isDnDsSupported() {\n        return 'ondrag' in document.createElement('a');\n    }\n\n    function determineEffectAllowed(e) {\n        if(e.originalEvent) {\n          e.dataTransfer = e.originalEvent.dataTransfer;\n        }\n\n        // Chrome doesn't set dropEffect, so we have to work it out ourselves\n        if (typeof e.dataTransfer !== 'undefined' && e.dataTransfer.dropEffect === 'none') {\n            if (e.dataTransfer.effectAllowed === 'copy' ||\n                e.dataTransfer.effectAllowed === 'move') {\n                e.dataTransfer.dropEffect = e.dataTransfer.effectAllowed;\n            } else if (e.dataTransfer.effectAllowed === 'copyMove' || e.dataTransfer.effectAllowed === 'copymove') {\n                e.dataTransfer.dropEffect = e.ctrlKey ? 'copy' : 'move';\n            }\n        }\n    }\n\n    if (!isDnDsSupported()) {\n        angular.module('ang-drag-drop', []);\n        return;\n    }\n\n    var module = angular.module('ang-drag-drop', []);\n\n    module.directive('uiDraggable', ['$parse', '$rootScope', '$dragImage', function($parse, $rootScope, $dragImage) {\n        return function(scope, element, attrs) {\n            var isDragHandleUsed = false,\n                dragHandleClass,\n                draggingClass = attrs.draggingClass || 'on-dragging',\n                dragTarget;\n\n            element.attr('draggable', false);\n\n            scope.$watch(attrs.uiDraggable, function(newValue) {\n                if (newValue) {\n                    element.attr('draggable', newValue);\n                    element.bind('dragend', dragendHandler);\n                    element.bind('dragstart', dragstartHandler);\n                }\n                else {\n                    element.removeAttr('draggable');\n                    element.unbind('dragend', dragendHandler);\n                    element.unbind('dragstart', dragstartHandler);\n                }\n\n            });\n\n            if (angular.isString(attrs.dragHandleClass)) {\n                isDragHandleUsed = true;\n                dragHandleClass = attrs.dragHandleClass.trim() || 'drag-handle';\n\n                element.bind('mousedown', function(e) {\n                    dragTarget = e.target;\n                });\n            }\n\n            function dragendHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                setTimeout(function() {\n                    element.unbind('$destroy', dragendHandler);\n                }, 0);\n                var sendChannel = attrs.dragChannel || 'defaultchannel';\n                $rootScope.$broadcast('ANGULAR_DRAG_END', e, sendChannel);\n\n                determineEffectAllowed(e);\n\n                if (e.dataTransfer && e.dataTransfer.dropEffect !== 'none') {\n                    if (attrs.onDropSuccess) {\n                        var onDropSuccessFn = $parse(attrs.onDropSuccess);\n                        scope.$evalAsync(function() {\n                            onDropSuccessFn(scope, {$event: e});\n                        });\n                    }\n                }else if (e.dataTransfer && e.dataTransfer.dropEffect === 'none'){\n                    if (attrs.onDropFailure) {\n                        var onDropFailureFn = $parse(attrs.onDropFailure);\n                        scope.$evalAsync(function() {\n                            onDropFailureFn(scope, {$event: e});\n                        });\n                    }\n                }\n                element.removeClass(draggingClass);\n            }\n\n            function setDragElement(e, dragImageElementId) {\n                var dragImageElementFn;\n\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                dragImageElementFn = $parse(dragImageElementId);\n\n                scope.$apply(function() {\n                    var elementId = dragImageElementFn(scope, {$event: e}),\n                        dragElement;\n\n                    if (!(elementId && angular.isString(elementId))) {\n                        return;\n                    }\n\n                    dragElement = document.getElementById(elementId);\n\n                    if (!dragElement) {\n                        return;\n                    }\n\n                    e.dataTransfer.setDragImage(dragElement, 0, 0);\n                });\n            }\n\n            function dragstartHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                var isDragAllowed = !isDragHandleUsed || dragTarget.classList.contains(dragHandleClass);\n\n                if (isDragAllowed) {\n                    var sendChannel = attrs.dragChannel || 'defaultchannel';\n                    var dragData = '';\n                    if (attrs.drag) {\n                        dragData = scope.$eval(attrs.drag);\n                    }\n\n                    var dragImage = attrs.dragImage || null;\n\n                    element.addClass(draggingClass);\n                    element.bind('$destroy', dragendHandler);\n\n                    //Code to make sure that the setDragImage is available. IE 10, 11, and Opera do not support setDragImage.\n                    var hasNativeDraggable = !(document.uniqueID || window.opera);\n\n                    //If there is a draggable image passed in, then set the image to be dragged.\n                    if (dragImage && hasNativeDraggable) {\n                        var dragImageFn = $parse(attrs.dragImage);\n                        scope.$apply(function() {\n                            var dragImageParameters = dragImageFn(scope, {$event: e});\n                            if (dragImageParameters) {\n                                if (angular.isString(dragImageParameters)) {\n                                    dragImageParameters = $dragImage.generate(dragImageParameters);\n                                }\n                                if (dragImageParameters.image) {\n                                    var xOffset = dragImageParameters.xOffset || 0,\n                                        yOffset = dragImageParameters.yOffset || 0;\n                                    e.dataTransfer.setDragImage(dragImageParameters.image, xOffset, yOffset);\n                                }\n                            }\n                        });\n                    } else if (attrs.dragImageElementId) {\n                        setDragElement(e, attrs.dragImageElementId);\n                    }\n\n                    var offset = {x: e.offsetX, y: e.offsetY};\n                    var transferDataObject = {data: dragData, channel: sendChannel, offset: offset};\n                    var transferDataText = angular.toJson(transferDataObject);\n\n                    e.dataTransfer.setData('text', transferDataText);\n                    e.dataTransfer.effectAllowed = 'copyMove';\n\n                    $rootScope.$broadcast('ANGULAR_DRAG_START', e, sendChannel, transferDataObject);\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n    }\n    ]);\n\n    module.directive('uiOnDrop', ['$parse', '$rootScope', function($parse, $rootScope) {\n        return function(scope, element, attr) {\n            var dragging = 0; //Ref. http://stackoverflow.com/a/10906204\n            var dropChannel = attr.dropChannel || 'defaultchannel';\n            var dragChannel = '';\n            var dragEnterClass = attr.dragEnterClass || 'on-drag-enter';\n            var dragHoverClass = attr.dragHoverClass || 'on-drag-hover';\n            var customDragEnterEvent = $parse(attr.onDragEnter);\n            var customDragLeaveEvent = $parse(attr.onDragLeave);\n\n            function calculateDropOffset(e) {\n                var offset = {\n                    x: e.offsetX,\n                    y: e.offsetY\n                };\n                var target = e.target;\n\n                while (target !== element[0]) {\n                    offset.x = offset.x + target.offsetLeft;\n                    offset.y = offset.y + target.offsetTop;\n\n                    target = target.offsetParent;\n                    if (!target) {\n                        return null;\n                    }\n                }\n\n                return offset;\n            }\n\n            function onDragOver(e) {\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                var uiOnDragOverFn = $parse(attr.uiOnDragOver);\n                scope.$evalAsync(function() {\n                    uiOnDragOverFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                return false;\n            }\n\n            function onDragLeave(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                dragging--;\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragLeaveEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.addClass(dragEnterClass);\n                    element.removeClass(dragHoverClass);\n                }\n\n                var uiOnDragLeaveFn = $parse(attr.uiOnDragLeave);\n                scope.$evalAsync(function() {\n                    uiOnDragLeaveFn(scope, {$event: e, $channel: dropChannel});\n                });\n            }\n\n            function onDragEnter(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragEnterEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.removeClass(dragEnterClass);\n                    element.addClass(dragHoverClass);\n                }\n                dragging++;\n\n                var uiOnDragEnterFn = $parse(attr.uiOnDragEnter);\n                scope.$evalAsync(function() {\n                    uiOnDragEnterFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                $rootScope.$broadcast('ANGULAR_HOVER', dragChannel);\n            }\n\n            function onDrop(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation(); // Necessary. Allows us to drop.\n                }\n\n                var sendData = e.dataTransfer.getData('text');\n                sendData = angular.fromJson(sendData);\n\n                var dropOffset = calculateDropOffset(e);\n                \n                var position = dropOffset ? {\n                    x: dropOffset.x - sendData.offset.x,\n                    y: dropOffset.y - sendData.offset.y\n                } : null;\n                \n                determineEffectAllowed(e);\n\n                var uiOnDropFn = $parse(attr.uiOnDrop);\n                scope.$evalAsync(function() {\n                    uiOnDropFn(scope, {$data: sendData.data, $event: e, $channel: sendData.channel, $position: position});\n                });\n                element.removeClass(dragEnterClass);\n                dragging = 0;\n            }\n            \n            function isDragChannelAccepted(dragChannel, dropChannel) {\n                if (dropChannel === '*') {\n                    return true;\n                }\n\n                var channelMatchPattern = new RegExp('(\\\\s|[,])+(' + dragChannel + ')(\\\\s|[,])+', 'i');\n\n                return channelMatchPattern.test(',' + dropChannel + ',');\n            }\n\n            function preventNativeDnD(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                e.dataTransfer.dropEffect = 'none';\n                return false;\n            }\n\n            var deregisterDragStart = $rootScope.$on('ANGULAR_DRAG_START', function(_, e, channel, transferDataObject) {\n                dragChannel = channel;\n\n                var valid = true;\n\n                if (!isDragChannelAccepted(channel, dropChannel)) {\n                    valid = false;\n                }\n\n                if (valid && attr.dropValidate) {\n                    var validateFn = $parse(attr.dropValidate);\n                    valid = validateFn(scope, {\n                        $drop: {scope: scope, element: element},\n                        $event: e,\n                        $data: transferDataObject.data,\n                        $channel: transferDataObject.channel\n                    });\n                }\n\n                if (valid) {\n                    element.bind('dragover', onDragOver);\n                    element.bind('dragenter', onDragEnter);\n                    element.bind('dragleave', onDragLeave);\n                    element.bind('drop', onDrop);\n\n                    element.addClass(dragEnterClass);\n                } else {\n                    element.bind('dragover', preventNativeDnD);\n                    element.bind('dragenter', preventNativeDnD);\n                    element.bind('dragleave', preventNativeDnD);\n                    element.bind('drop', preventNativeDnD);\n\n                    element.removeClass(dragEnterClass);\n                }\n\n            });\n\n\n            var deregisterDragEnd = $rootScope.$on('ANGULAR_DRAG_END', function() {\n                element.unbind('dragover', onDragOver);\n                element.unbind('dragenter', onDragEnter);\n                element.unbind('dragleave', onDragLeave);\n\n                element.unbind('drop', onDrop);\n                element.removeClass(dragHoverClass);\n                element.removeClass(dragEnterClass);\n\n                element.unbind('dragover', preventNativeDnD);\n                element.unbind('dragenter', preventNativeDnD);\n                element.unbind('dragleave', preventNativeDnD);\n                element.unbind('drop', preventNativeDnD);\n            });\n\n            scope.$on('$destroy', function() {\n                deregisterDragStart();\n                deregisterDragEnd();\n            });\n\n\n            attr.$observe('dropChannel', function(value) {\n                if (value) {\n                    dropChannel = value;\n                }\n            });\n\n\n        };\n    }\n    ]);\n\n    module.constant('$dragImageConfig', {\n        height: 20,\n        width: 200,\n        padding: 10,\n        font: 'bold 11px Arial',\n        fontColor: '#eee8d5',\n        backgroundColor: '#93a1a1',\n        xOffset: 0,\n        yOffset: 0\n    });\n\n    module.service('$dragImage', ['$dragImageConfig', function(defaultConfig) {\n        var ELLIPSIS = '…';\n\n        function fitString(canvas, text, config) {\n            var width = canvas.measureText(text).width;\n            if (width < config.width) {\n                return text;\n            }\n            while (width + config.padding > config.width) {\n                text = text.substring(0, text.length - 1);\n                width = canvas.measureText(text + ELLIPSIS).width;\n            }\n            return text + ELLIPSIS;\n        }\n\n        this.generate = function(text, options) {\n            var config = angular.extend({}, defaultConfig, options || {});\n            var el = document.createElement('canvas');\n\n            el.height = config.height;\n            el.width = config.width;\n\n            var canvas = el.getContext('2d');\n\n            canvas.fillStyle = config.backgroundColor;\n            canvas.fillRect(0, 0, config.width, config.height);\n            canvas.font = config.font;\n            canvas.fillStyle = config.fontColor;\n\n            var title = fitString(canvas, text, config);\n            canvas.fillText(title, 4, config.padding + 4);\n\n            var image = new Image();\n            image.src = el.toDataURL();\n\n            return {\n                image: image,\n                xOffset: config.xOffset,\n                yOffset: config.yOffset\n            };\n        };\n    }\n    ]);\n\n}(angular));\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(5);\nmodule.exports = 'ang-drag-drop';\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(2);\n\n__webpack_require__(3);\n\n__webpack_require__(1);\n\n__webpack_require__(4);\n\nangular.module('angularTimePlanner', ['timePlannerContainerDirective', 'timePlannerRowDirective', 'timePlannerCellDirective']).constant('LOCALES', {\n  DEFAULT: 'en-us',\n  AVAILABLE: ['en-us']\n});\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=atp-segment-item-wrapper><div class=atp-segment-item ng-repeat=\\\"item in segment\\\" ng-class=\\\"[item.segmentType, {'highlighted': (item.id === highlightedItem.id)}]\\\" ng-mouseenter=onHoverEvent(item) ng-mouseleave=onHoverEvent() ng-click=onClickEvent(item)></div></div>\";\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=atp-container><div class=atp-head><div class=atp-row><div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{locale.labels.rowTitle}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=options.needCounter><span class=atpc-label>{{locale.labels.counterTitle.hours}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                      'hour-segment': options.timeScope === 'day'}\\\"><span class=atpc-label>{{segment}}</span></div></div></div><div class=atp-row ng-repeat=\\\"row in rows\\\" drop-channel=\\\"{{options.editable && row.editable && options.dropChannel}}\\\" ui-on-drop=\\\"onDropEvent($data, row.id)\\\" time-planner-row></div></div>\";\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{row.title}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=options.needCounter><span class=atpc-label>{{row.hours || 0}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in row.segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                'hour-segment': options.timeScope === 'day'}\\\" time-planner-cell></div>\";\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./time-planner-locale_en-us\": 0,\n\t\"./time-planner-locale_en-us.js\": 0\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 12;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// angular-time-planner.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 36e8775d23e5896321da","module.exports = {\n  labels: {\n    rowTitle: 'Tasks',\n    counterTitle: {\n      days: 'Days',\n      hours: 'Hours'\n    }\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerLocales/time-planner-locale_en-us.js","import template from './timePlannerCellTemplate.html';\n\nangular\n  .module('timePlannerCellDirective', [])\n  .directive('timePlannerCell', ['$rootScope', ($rootScope) => {\n    let link = (scope) => {\n      // Scope functions\n      scope.onHoverEvent = (item) => { scope.$parent.highlightedItem = item };\n      scope.onClickEvent = (item) => $rootScope.$broadcast('ATP_SEGMENT_ON_CLICK', item);\n\n    };\n\n    return {\n      restrict: 'A',\n      template: template,\n      link: link\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerCell/timePlannerCellDirective.js","import template from './timePlannerContainerTemplate.html';\nimport merge from 'deepmerge';\nimport 'angular-native-dragdrop';\n\n\nangular\n  .module('timePlannerContainerDirective', ['ang-drag-drop'])\n  .directive('timePlannerContainer', ['$rootScope', '$locale', 'LOCALES', ($rootScope, $locale, LOCALES) => {\n    const controller = ($scope) => {\n      let\n        _localeId = LOCALES.AVAILABLE.includes($locale.id) ? $locale.id : LOCALES.DEFAULT,\n        _defaultOptions = {\n          timeScope: 'week',\n          needCounter: false,\n          editable: false,\n          dropChannel: 'atp-row'\n        };\n\n      _init();\n      $scope.$watchCollection('options', _init);\n\n      // Scope functions\n      $scope.onDropEvent = (item, rowId) => $rootScope.$broadcast('ATP_ITEM_ON_DROP', {id: rowId, item: item});\n\n      function _init() {\n        // I use private variables since we're not changing options from inside and it's easier to watch and merge scope\n\n        // merge defaults with user options\n        $scope.options = merge(_defaultOptions, $scope.options);\n        // we use an object with merged default locale and scope override(if any)\n        $scope.locale = merge(\n          require(`../timePlannerLocales/time-planner-locale_${_localeId}`),\n          $scope.options.locale || {}\n        );\n        // fill segments for current options\n        $scope.segments = _getSegments();\n      }\n\n      // Get segments for planner, hours, week, dates range. Default is a week.\n      function _getSegments() {\n        switch ($scope.options.timeScope) {\n          case 'day':\n            return _getHours();\n            break;\n          case 'range':\n            // reserved for future use\n            break;\n          case 'week':\n          default:\n            return _getWeekDays();\n        }\n      }\n\n      // Method to generate hours labels\n      function _getHours() {\n        const hours = [];\n\n        for (let i = 0; i < 24; i++) {\n          hours.push(i);\n        }\n\n        return hours;\n      }\n\n      // Method to generate week days labels\n      // I use only days from locales. First day of the week is the same as Date() (0 - Sun)\n      function _getWeekDays() {\n        let\n          week = [...$locale.DATETIME_FORMATS.SHORTDAY],\n          alteredWeek = week.splice($scope.options.firstDay  || 0, week.length);\n        return [...alteredWeek, ...week];\n      }\n\n    };\n\n    return {\n      restrict: 'E',\n      scope: {\n        options: '=',\n        rows: '='\n      },\n      controller: controller,\n      template: template\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerContainer/timePlannerContainerDirective.js","import template from './timePlannerRowTemplate.html';\n\nangular\n  .module('timePlannerRowDirective', [])\n  .directive('timePlannerRow', () => {\n    const controller = ($scope) => {\n      const _methods = {\n        week: {\n          fillSegments: _fillSegmentsForWeek\n        },\n        day: {\n          fillSegments: _fillSegmentsForDay\n        }\n      };\n\n      // INIT\n      _prepareItems();\n      $scope.$watchCollection('options', _prepareItems);\n\n      // Generate segments for each row\n      function _prepareItems() {\n        $scope.row.segments = [];\n        $scope.row.hours = 0;\n        $scope.$parent.segments.forEach(() => $scope.row.segments.push([]));\n        $scope.row.items.forEach(_methods[$scope.$parent.options.timeScope].fillSegments);\n      }\n\n      // Fill each segment with items. This method is solely for week time scope\n      function _fillSegmentsForWeek(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end),\n          },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength, firstDayNumber;\n\n        schedule.scheduledStart.setHours(0,0,0,0);\n        schedule.scheduledEnd.setHours(23,59,59,999);\n\n        schedule = _setBoundaries(schedule);\n        firstDayNumber = schedule.scheduledStart.getDay();\n\n        itemLength = Math.ceil(\n          Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay)\n        );\n\n        $scope.row.hours += itemLength * 8;\n\n        for (let i = 0; i < itemLength; i++) {\n          $scope.row.segments[firstDayNumber + i].push(item);\n        }\n      }\n\n      // Fill each segment with items. This method is solely for day time scope\n      function _fillSegmentsForDay(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end)\n          },\n          itemLength, firstHour;\n\n        schedule = _setBoundaries(schedule);\n        firstHour = schedule.scheduledStart.getHours();\n        itemLength = schedule.scheduledEnd.getHours() - schedule.scheduledStart.getHours() +\n          (schedule.scheduledEnd.getMinutes() === 0 ? 0 : 1); // if it ends with 00 - we don't count that hour\n\n        $scope.row.hours += itemLength;\n\n        for (let i = 0; i < itemLength; i++) {\n          $scope.row.segments[firstHour + i].push(item);\n        }\n      }\n\n      // Set boundaries for item inside the planner\n      function _setBoundaries(schedule) {\n        schedule.scheduledStart = schedule.scheduledStart < $scope.$parent.options.from ?\n          new Date($scope.$parent.options.from) : schedule.scheduledStart;\n\n        schedule.scheduledEnd = schedule.scheduledEnd > $scope.$parent.options.to ?\n          new Date($scope.$parent.options.to) : schedule.scheduledEnd;\n\n        return schedule;\n      }\n    };\n\n    return {\n      restrict: 'A',\n      template: template,\n      controller: controller\n    };\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerRow/timePlannerRowDirective.js","(function(angular) {\n    'use strict';\n\n    function isDnDsSupported() {\n        return 'ondrag' in document.createElement('a');\n    }\n\n    function determineEffectAllowed(e) {\n        if(e.originalEvent) {\n          e.dataTransfer = e.originalEvent.dataTransfer;\n        }\n\n        // Chrome doesn't set dropEffect, so we have to work it out ourselves\n        if (typeof e.dataTransfer !== 'undefined' && e.dataTransfer.dropEffect === 'none') {\n            if (e.dataTransfer.effectAllowed === 'copy' ||\n                e.dataTransfer.effectAllowed === 'move') {\n                e.dataTransfer.dropEffect = e.dataTransfer.effectAllowed;\n            } else if (e.dataTransfer.effectAllowed === 'copyMove' || e.dataTransfer.effectAllowed === 'copymove') {\n                e.dataTransfer.dropEffect = e.ctrlKey ? 'copy' : 'move';\n            }\n        }\n    }\n\n    if (!isDnDsSupported()) {\n        angular.module('ang-drag-drop', []);\n        return;\n    }\n\n    var module = angular.module('ang-drag-drop', []);\n\n    module.directive('uiDraggable', ['$parse', '$rootScope', '$dragImage', function($parse, $rootScope, $dragImage) {\n        return function(scope, element, attrs) {\n            var isDragHandleUsed = false,\n                dragHandleClass,\n                draggingClass = attrs.draggingClass || 'on-dragging',\n                dragTarget;\n\n            element.attr('draggable', false);\n\n            scope.$watch(attrs.uiDraggable, function(newValue) {\n                if (newValue) {\n                    element.attr('draggable', newValue);\n                    element.bind('dragend', dragendHandler);\n                    element.bind('dragstart', dragstartHandler);\n                }\n                else {\n                    element.removeAttr('draggable');\n                    element.unbind('dragend', dragendHandler);\n                    element.unbind('dragstart', dragstartHandler);\n                }\n\n            });\n\n            if (angular.isString(attrs.dragHandleClass)) {\n                isDragHandleUsed = true;\n                dragHandleClass = attrs.dragHandleClass.trim() || 'drag-handle';\n\n                element.bind('mousedown', function(e) {\n                    dragTarget = e.target;\n                });\n            }\n\n            function dragendHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                setTimeout(function() {\n                    element.unbind('$destroy', dragendHandler);\n                }, 0);\n                var sendChannel = attrs.dragChannel || 'defaultchannel';\n                $rootScope.$broadcast('ANGULAR_DRAG_END', e, sendChannel);\n\n                determineEffectAllowed(e);\n\n                if (e.dataTransfer && e.dataTransfer.dropEffect !== 'none') {\n                    if (attrs.onDropSuccess) {\n                        var onDropSuccessFn = $parse(attrs.onDropSuccess);\n                        scope.$evalAsync(function() {\n                            onDropSuccessFn(scope, {$event: e});\n                        });\n                    }\n                }else if (e.dataTransfer && e.dataTransfer.dropEffect === 'none'){\n                    if (attrs.onDropFailure) {\n                        var onDropFailureFn = $parse(attrs.onDropFailure);\n                        scope.$evalAsync(function() {\n                            onDropFailureFn(scope, {$event: e});\n                        });\n                    }\n                }\n                element.removeClass(draggingClass);\n            }\n\n            function setDragElement(e, dragImageElementId) {\n                var dragImageElementFn;\n\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                dragImageElementFn = $parse(dragImageElementId);\n\n                scope.$apply(function() {\n                    var elementId = dragImageElementFn(scope, {$event: e}),\n                        dragElement;\n\n                    if (!(elementId && angular.isString(elementId))) {\n                        return;\n                    }\n\n                    dragElement = document.getElementById(elementId);\n\n                    if (!dragElement) {\n                        return;\n                    }\n\n                    e.dataTransfer.setDragImage(dragElement, 0, 0);\n                });\n            }\n\n            function dragstartHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                var isDragAllowed = !isDragHandleUsed || dragTarget.classList.contains(dragHandleClass);\n\n                if (isDragAllowed) {\n                    var sendChannel = attrs.dragChannel || 'defaultchannel';\n                    var dragData = '';\n                    if (attrs.drag) {\n                        dragData = scope.$eval(attrs.drag);\n                    }\n\n                    var dragImage = attrs.dragImage || null;\n\n                    element.addClass(draggingClass);\n                    element.bind('$destroy', dragendHandler);\n\n                    //Code to make sure that the setDragImage is available. IE 10, 11, and Opera do not support setDragImage.\n                    var hasNativeDraggable = !(document.uniqueID || window.opera);\n\n                    //If there is a draggable image passed in, then set the image to be dragged.\n                    if (dragImage && hasNativeDraggable) {\n                        var dragImageFn = $parse(attrs.dragImage);\n                        scope.$apply(function() {\n                            var dragImageParameters = dragImageFn(scope, {$event: e});\n                            if (dragImageParameters) {\n                                if (angular.isString(dragImageParameters)) {\n                                    dragImageParameters = $dragImage.generate(dragImageParameters);\n                                }\n                                if (dragImageParameters.image) {\n                                    var xOffset = dragImageParameters.xOffset || 0,\n                                        yOffset = dragImageParameters.yOffset || 0;\n                                    e.dataTransfer.setDragImage(dragImageParameters.image, xOffset, yOffset);\n                                }\n                            }\n                        });\n                    } else if (attrs.dragImageElementId) {\n                        setDragElement(e, attrs.dragImageElementId);\n                    }\n\n                    var offset = {x: e.offsetX, y: e.offsetY};\n                    var transferDataObject = {data: dragData, channel: sendChannel, offset: offset};\n                    var transferDataText = angular.toJson(transferDataObject);\n\n                    e.dataTransfer.setData('text', transferDataText);\n                    e.dataTransfer.effectAllowed = 'copyMove';\n\n                    $rootScope.$broadcast('ANGULAR_DRAG_START', e, sendChannel, transferDataObject);\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n    }\n    ]);\n\n    module.directive('uiOnDrop', ['$parse', '$rootScope', function($parse, $rootScope) {\n        return function(scope, element, attr) {\n            var dragging = 0; //Ref. http://stackoverflow.com/a/10906204\n            var dropChannel = attr.dropChannel || 'defaultchannel';\n            var dragChannel = '';\n            var dragEnterClass = attr.dragEnterClass || 'on-drag-enter';\n            var dragHoverClass = attr.dragHoverClass || 'on-drag-hover';\n            var customDragEnterEvent = $parse(attr.onDragEnter);\n            var customDragLeaveEvent = $parse(attr.onDragLeave);\n\n            function calculateDropOffset(e) {\n                var offset = {\n                    x: e.offsetX,\n                    y: e.offsetY\n                };\n                var target = e.target;\n\n                while (target !== element[0]) {\n                    offset.x = offset.x + target.offsetLeft;\n                    offset.y = offset.y + target.offsetTop;\n\n                    target = target.offsetParent;\n                    if (!target) {\n                        return null;\n                    }\n                }\n\n                return offset;\n            }\n\n            function onDragOver(e) {\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                var uiOnDragOverFn = $parse(attr.uiOnDragOver);\n                scope.$evalAsync(function() {\n                    uiOnDragOverFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                return false;\n            }\n\n            function onDragLeave(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                dragging--;\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragLeaveEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.addClass(dragEnterClass);\n                    element.removeClass(dragHoverClass);\n                }\n\n                var uiOnDragLeaveFn = $parse(attr.uiOnDragLeave);\n                scope.$evalAsync(function() {\n                    uiOnDragLeaveFn(scope, {$event: e, $channel: dropChannel});\n                });\n            }\n\n            function onDragEnter(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragEnterEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.removeClass(dragEnterClass);\n                    element.addClass(dragHoverClass);\n                }\n                dragging++;\n\n                var uiOnDragEnterFn = $parse(attr.uiOnDragEnter);\n                scope.$evalAsync(function() {\n                    uiOnDragEnterFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                $rootScope.$broadcast('ANGULAR_HOVER', dragChannel);\n            }\n\n            function onDrop(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation(); // Necessary. Allows us to drop.\n                }\n\n                var sendData = e.dataTransfer.getData('text');\n                sendData = angular.fromJson(sendData);\n\n                var dropOffset = calculateDropOffset(e);\n                \n                var position = dropOffset ? {\n                    x: dropOffset.x - sendData.offset.x,\n                    y: dropOffset.y - sendData.offset.y\n                } : null;\n                \n                determineEffectAllowed(e);\n\n                var uiOnDropFn = $parse(attr.uiOnDrop);\n                scope.$evalAsync(function() {\n                    uiOnDropFn(scope, {$data: sendData.data, $event: e, $channel: sendData.channel, $position: position});\n                });\n                element.removeClass(dragEnterClass);\n                dragging = 0;\n            }\n            \n            function isDragChannelAccepted(dragChannel, dropChannel) {\n                if (dropChannel === '*') {\n                    return true;\n                }\n\n                var channelMatchPattern = new RegExp('(\\\\s|[,])+(' + dragChannel + ')(\\\\s|[,])+', 'i');\n\n                return channelMatchPattern.test(',' + dropChannel + ',');\n            }\n\n            function preventNativeDnD(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                e.dataTransfer.dropEffect = 'none';\n                return false;\n            }\n\n            var deregisterDragStart = $rootScope.$on('ANGULAR_DRAG_START', function(_, e, channel, transferDataObject) {\n                dragChannel = channel;\n\n                var valid = true;\n\n                if (!isDragChannelAccepted(channel, dropChannel)) {\n                    valid = false;\n                }\n\n                if (valid && attr.dropValidate) {\n                    var validateFn = $parse(attr.dropValidate);\n                    valid = validateFn(scope, {\n                        $drop: {scope: scope, element: element},\n                        $event: e,\n                        $data: transferDataObject.data,\n                        $channel: transferDataObject.channel\n                    });\n                }\n\n                if (valid) {\n                    element.bind('dragover', onDragOver);\n                    element.bind('dragenter', onDragEnter);\n                    element.bind('dragleave', onDragLeave);\n                    element.bind('drop', onDrop);\n\n                    element.addClass(dragEnterClass);\n                } else {\n                    element.bind('dragover', preventNativeDnD);\n                    element.bind('dragenter', preventNativeDnD);\n                    element.bind('dragleave', preventNativeDnD);\n                    element.bind('drop', preventNativeDnD);\n\n                    element.removeClass(dragEnterClass);\n                }\n\n            });\n\n\n            var deregisterDragEnd = $rootScope.$on('ANGULAR_DRAG_END', function() {\n                element.unbind('dragover', onDragOver);\n                element.unbind('dragenter', onDragEnter);\n                element.unbind('dragleave', onDragLeave);\n\n                element.unbind('drop', onDrop);\n                element.removeClass(dragHoverClass);\n                element.removeClass(dragEnterClass);\n\n                element.unbind('dragover', preventNativeDnD);\n                element.unbind('dragenter', preventNativeDnD);\n                element.unbind('dragleave', preventNativeDnD);\n                element.unbind('drop', preventNativeDnD);\n            });\n\n            scope.$on('$destroy', function() {\n                deregisterDragStart();\n                deregisterDragEnd();\n            });\n\n\n            attr.$observe('dropChannel', function(value) {\n                if (value) {\n                    dropChannel = value;\n                }\n            });\n\n\n        };\n    }\n    ]);\n\n    module.constant('$dragImageConfig', {\n        height: 20,\n        width: 200,\n        padding: 10,\n        font: 'bold 11px Arial',\n        fontColor: '#eee8d5',\n        backgroundColor: '#93a1a1',\n        xOffset: 0,\n        yOffset: 0\n    });\n\n    module.service('$dragImage', ['$dragImageConfig', function(defaultConfig) {\n        var ELLIPSIS = '…';\n\n        function fitString(canvas, text, config) {\n            var width = canvas.measureText(text).width;\n            if (width < config.width) {\n                return text;\n            }\n            while (width + config.padding > config.width) {\n                text = text.substring(0, text.length - 1);\n                width = canvas.measureText(text + ELLIPSIS).width;\n            }\n            return text + ELLIPSIS;\n        }\n\n        this.generate = function(text, options) {\n            var config = angular.extend({}, defaultConfig, options || {});\n            var el = document.createElement('canvas');\n\n            el.height = config.height;\n            el.width = config.width;\n\n            var canvas = el.getContext('2d');\n\n            canvas.fillStyle = config.backgroundColor;\n            canvas.fillRect(0, 0, config.width, config.height);\n            canvas.font = config.font;\n            canvas.fillStyle = config.fontColor;\n\n            var title = fitString(canvas, text, config);\n            canvas.fillText(title, 4, config.padding + 4);\n\n            var image = new Image();\n            image.src = el.toDataURL();\n\n            return {\n                image: image,\n                xOffset: config.xOffset,\n                yOffset: config.yOffset\n            };\n        };\n    }\n    ]);\n\n}(angular));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-native-dragdrop/draganddrop.js\n// module id = 5\n// module chunks = 0","require('./draganddrop');\nmodule.exports = 'ang-drag-drop';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-native-dragdrop/index.js\n// module id = 6\n// module chunks = 0","'use strict';\n\nimport './timePlannerContainer/timePlannerContainerDirective';\nimport './timePlannerRow/timePlannerRowDirective';\nimport './timePlannerCell/timePlannerCellDirective';\n\nimport '../styles/angular-time-planner.scss';\n\nangular\n  .module('angularTimePlanner', ['timePlannerContainerDirective', 'timePlannerRowDirective', 'timePlannerCellDirective'])\n  .constant('LOCALES', {\n    DEFAULT: 'en-us',\n    AVAILABLE: ['en-us']\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-time-planner.js","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deepmerge/dist/cjs.js\n// module id = 8\n// module chunks = 0","module.exports = \"<div class=atp-segment-item-wrapper><div class=atp-segment-item ng-repeat=\\\"item in segment\\\" ng-class=\\\"[item.segmentType, {'highlighted': (item.id === highlightedItem.id)}]\\\" ng-mouseenter=onHoverEvent(item) ng-mouseleave=onHoverEvent() ng-click=onClickEvent(item)></div></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerCell/timePlannerCellTemplate.html\n// module id = 9\n// module chunks = 0","module.exports = \"<div class=atp-container><div class=atp-head><div class=atp-row><div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{locale.labels.rowTitle}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=options.needCounter><span class=atpc-label>{{locale.labels.counterTitle.hours}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                      'hour-segment': options.timeScope === 'day'}\\\"><span class=atpc-label>{{segment}}</span></div></div></div><div class=atp-row ng-repeat=\\\"row in rows\\\" drop-channel=\\\"{{options.editable && row.editable && options.dropChannel}}\\\" ui-on-drop=\\\"onDropEvent($data, row.id)\\\" time-planner-row></div></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerContainer/timePlannerContainerTemplate.html\n// module id = 10\n// module chunks = 0","module.exports = \"<div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{row.title}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=options.needCounter><span class=atpc-label>{{row.hours || 0}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in row.segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                'hour-segment': options.timeScope === 'day'}\\\" time-planner-cell></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerRow/timePlannerRowTemplate.html\n// module id = 11\n// module chunks = 0","var map = {\n\t\"./time-planner-locale_en-us\": 0,\n\t\"./time-planner-locale_en-us.js\": 0\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 12;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerLocales ^\\.\\/time\\-planner\\-locale_.*$\n// module id = 12\n// module chunks = 0"],"sourceRoot":""}