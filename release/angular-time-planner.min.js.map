{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-time-planner.min.js","webpack:///webpack/bootstrap 9554c8b8d202a21714db","webpack:///./src/timePlannerLocales/time-planner-locale_en-us.js","webpack:///./src/currentTimeMarker/currentTimeMarkerDirective.js","webpack:///./src/timePlannerCell/timePlannerCellDirective.js","webpack:///./src/timePlannerContainer/timePlannerContainerDirective.js","webpack:///./src/timePlannerRow/timePlannerRowDirective.js","webpack:///./src/timeSegment/timeSegmentService.js","webpack:///./src/timetable/timetableService.js","webpack:///./~/angular-native-dragdrop/draganddrop.js","webpack:///./~/angular-native-dragdrop/index.js","webpack:///./src/angular-time-planner.js","webpack:///./~/deepmerge/dist/cjs.js","webpack:///./src/timePlannerCell/timePlannerCellTemplate.html","webpack:///./src/timePlannerContainer/timePlannerContainerTemplate.html","webpack:///./src/timePlannerRow/timePlannerRowTemplate.html","webpack:///./src/timePlannerLocales ^\\.\\/time\\-planner\\-locale_.*$"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","labels","rowTitle","counterTitle","days","hours","timetableTitle","angular","directive","$interval","restrict","link","scope","element","_setStartPosition","segment","parent","initialOffset","document","querySelector","offsetLeft","parentWidth","offsetWidth","segmentsWidth","css","left","_updatePosition","offset","_calculateOffset","opacity","options","timeScope","_calculateOffsetForDay","_calculateOffsetForWeek","now","Date","hour","getHours","quarter","Math","floor","getMinutes","day","getDay","_stopInterval","cancel","interval","$watch","on","template","_timePlannerCellTemplate","_timePlannerCellTemplate2","obj","default","$rootScope","controller","$scope","onHoverEvent","item","$parent","highlightedItem","onClickEvent","$broadcast","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","arr2","length","from","_timePlannerContainerTemplate","_timePlannerContainerTemplate2","_deepmerge","_deepmerge2","$locale","LOCALES","rows","TimeSegment","_init","_defaultOptions","locale","_localeId","segments","_getSegments","_getHours","_getDaysForRange","_getDaysForMonth","_getWeekDays","push","segmentType","disableTimetable","fromDate","month","getMonth","daysInMonth","getFullYear","getDate","toDate","to","daysInRange","ceil","getTime","date","setDate","defaultWeek","DATETIME_FORMATS","SHORTDAY","alteredWeek","splice","firstDay","preparedWeek","forEach","AVAILABLE","includes","id","DEFAULT","editable","dropChannel","$watchCollection","onDropEvent","rowId","_extends","assign","target","arguments","source","key","_timePlannerRowTemplate","_timePlannerRowTemplate2","Timetable","_showCriticalItems","criticalItems","_prepareItems","row","_normalizeRowTimetableData","index","timeSegment","range","_methods","setRange","activeTimetable","_getTimetableForCurrentRange","timetables","timetable","toggleDisabled","validate","items","fillSegments","timetablesNames","timetablesClasses","timetable-type-on-call","timetable-type-night-shift","type","segmentRange","find","boundaries","_setRangeForDay","rangeFrom","rangeTo","firstDate","_setRangeForHour","setHours","_fillSegmentsForRange","schedule","scheduledStart","scheduled_start","scheduledEnd","scheduled_end","itemLength","firstDayNumber","_setBoundaries","abs","disabled","addItem","disableCounter","_fillSegmentsForMonth","_fillSegmentsForWeek","_fillSegmentsForDay","firstHour","overlap","week","showCriticalItems","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","params","concat","itemForRemove","filter","boolean","start","Number","end","breakStart","breakEnd","weekAvailability","startDate","endDate","weekDay","startHour","endHour","determineEffectAllowed","e","originalEvent","dataTransfer","dropEffect","effectAllowed","ctrlKey","createElement","$parse","$dragImage","attrs","dragendHandler","setTimeout","unbind","sendChannel","dragChannel","onDropSuccess","onDropSuccessFn","$evalAsync","$event","onDropFailure","onDropFailureFn","removeClass","draggingClass","setDragElement","dragImageElementId","dragImageElementFn","$apply","dragElement","elementId","isString","getElementById","setDragImage","dragstartHandler","isDragHandleUsed","dragTarget","classList","contains","dragHandleClass","dragData","drag","$eval","dragImage","addClass","bind","hasNativeDraggable","uniqueID","window","opera","dragImageFn","dragImageParameters","generate","image","xOffset","yOffset","x","offsetX","y","offsetY","transferDataObject","data","channel","transferDataText","toJson","setData","preventDefault","attr","uiDraggable","newValue","removeAttr","trim","calculateDropOffset","offsetTop","offsetParent","onDragOver","stopPropagation","uiOnDragOverFn","uiOnDragOver","$channel","onDragLeave","dragging","customDragLeaveEvent","dragEnterClass","dragHoverClass","uiOnDragLeaveFn","uiOnDragLeave","onDragEnter","customDragEnterEvent","uiOnDragEnterFn","uiOnDragEnter","onDrop","sendData","getData","fromJson","dropOffset","position","uiOnDropFn","uiOnDrop","$data","$position","isDragChannelAccepted","RegExp","test","preventNativeDnD","deregisterDragStart","$on","_","valid","dropValidate","$drop","deregisterDragEnd","$observe","constant","height","width","padding","font","fontColor","backgroundColor","service","defaultConfig","fitString","canvas","text","config","measureText","substring","ELLIPSIS","extend","el","getContext","fillStyle","fillRect","title","fillText","Image","src","toDataURL","isNonNullObject","isSpecial","stringValue","toString","isReactElement","$$typeof","REACT_ELEMENT_TYPE","emptyTarget","val","cloneIfNecessary","optionsArgument","clone","isMergeableObject","deepmerge","defaultArrayMerge","destination","slice","indexOf","mergeObject","keys","sourceIsArray","targetIsArray","arrayMerge","canUseSymbol","Symbol","for","all","array","Error","reduce","prev","next","deepmerge_1","webpackContext","req","webpackContextResolve","map","./time-planner-locale_en-us","./time-planner-locale_en-us.js","resolve"],"mappings":"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","file":"angular-time-planner.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularTimePlanner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularTimePlanner\"] = factory();\n\telse\n\t\troot[\"angularTimePlanner\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularTimePlanner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularTimePlanner\"] = factory();\n\telse\n\t\troot[\"angularTimePlanner\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  labels: {\n    rowTitle: 'Tasks',\n    counterTitle: {\n      days: 'Days',\n      hours: 'Hours'\n    },\n    timetableTitle: 'Timetable'\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nangular.module('currentTimeMarkerDirective', []).directive('currentTimeMarker', ['$interval', function ($interval) {\n  var link = function link(scope, element) {\n    var interval = void 0,\n        initialOffset = void 0,\n        parentWidth = void 0,\n        segmentsWidth = void 0;\n\n    angular.element(_setStartPosition);\n    scope.$watch('options.timeScope', _updatePosition);\n\n    function _setStartPosition() {\n      var segment = void 0,\n          parent = void 0;\n\n      initialOffset = (segment = document.querySelector('.atp-items-wrapper .atp-segment')) ? segment.offsetLeft : 0;\n      parentWidth = (parent = document.querySelector('.atp-items-wrapper')) ? parent.offsetWidth : 0;\n\n      segmentsWidth = parentWidth - initialOffset;\n      element.css({ left: initialOffset + 'px' });\n      _updatePosition();\n    }\n\n    function _updatePosition() {\n      var offset = initialOffset + _calculateOffset();\n      element.css({\n        left: offset + 'px',\n        opacity: initialOffset === offset ? 0 : 1\n      });\n    }\n\n    function _calculateOffset() {\n      switch (scope.options.timeScope) {\n        case 'day':\n          return _calculateOffsetForDay();\n        case 'week':\n          return _calculateOffsetForWeek();\n        case 'month':\n          return 0;\n        case 'range':\n          return 0;\n      }\n    }\n\n    function _calculateOffsetForDay() {\n      var now = new Date(),\n          hour = now.getHours(),\n          quarter = Math.floor(now.getMinutes() / 15);\n      return segmentsWidth / 24 * (hour + 0.25 * (quarter > 0 ? quarter : 0));\n    }\n\n    function _calculateOffsetForWeek() {\n      var now = new Date(),\n          day = now.getDay(),\n          quarter = Math.floor(now.getHours() / 6);\n      return segmentsWidth / 7 * (day + 0.25 * (quarter > 0 ? quarter : 0));\n    }\n\n    function _startInterval() {\n      interval = $interval(function () {\n        _updatePosition();\n      }, 60000);\n    }\n\n    function _stopInterval() {\n      $interval.cancel(interval);\n    }\n\n    // Live update\n    _startInterval();\n    element.on('$destroy', _stopInterval);\n  };\n\n  return {\n    restrict: 'E',\n    link: link,\n    template: '<div></div>'\n  };\n}]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerCellTemplate = __webpack_require__(12);\n\nvar _timePlannerCellTemplate2 = _interopRequireDefault(_timePlannerCellTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('timePlannerCellDirective', []).directive('timePlannerCell', ['$rootScope', function ($rootScope) {\n  var controller = ['$scope', function ($scope) {\n    // Scope functions\n    $scope.onHoverEvent = function (item) {\n      $scope.$parent.highlightedItem = item;\n    };\n    $scope.onClickEvent = function (item) {\n      return $rootScope.$broadcast('ATP_SEGMENT_ON_CLICK', item);\n    };\n  }];\n\n  return {\n    restrict: 'A',\n    template: _timePlannerCellTemplate2.default,\n    controller: controller\n  };\n}]);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerContainerTemplate = __webpack_require__(13);\n\nvar _timePlannerContainerTemplate2 = _interopRequireDefault(_timePlannerContainerTemplate);\n\nvar _deepmerge = __webpack_require__(11);\n\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\n\n__webpack_require__(9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('timePlannerContainerDirective', ['ang-drag-drop', 'timeSegment', 'currentTimeMarkerDirective']).directive('timePlannerContainer', ['$rootScope', '$locale', 'LOCALES', function ($rootScope, $locale, LOCALES) {\n  var controller = ['$scope', 'TimeSegment', function ($scope, TimeSegment) {\n    var _localeId = LOCALES.AVAILABLE.includes($locale.id) ? $locale.id : LOCALES.DEFAULT,\n        _defaultOptions = {\n      timeScope: 'week',\n      editable: false,\n      dropChannel: 'atp-row'\n    };\n\n    $scope.$watchCollection('options', _init);\n\n    // Scope functions\n    $scope.onDropEvent = function (item, rowId) {\n      return $rootScope.$broadcast('ATP_ITEM_ON_DROP', { id: rowId, item: item });\n    };\n\n    function _init() {\n      // I use private variables since we're not changing options from inside and it's easier to watch and merge scope\n\n      // merge defaults with user options\n      $scope.options = (0, _deepmerge2.default)(_defaultOptions, $scope.options);\n      // we use an object with merged default locale and scope override(if any)\n      $scope.locale = (0, _deepmerge2.default)(__webpack_require__(15)(\"./time-planner-locale_\" + _localeId), $scope.options.locale || {});\n      // fill segments for current options\n      $scope.segments = _getSegments();\n    }\n\n    // Get segments for planner, hours, week, dates range. Default is a week.\n    function _getSegments() {\n      switch ($scope.options.timeScope) {\n        case 'day':\n          return _getHours();\n        case 'range':\n          return _getDaysForRange();\n        case 'month':\n          return _getDaysForMonth();\n        case 'week':\n        default:\n          return _getWeekDays();\n      }\n    }\n\n    // Method to generate hours labels\n    function _getHours() {\n      var segments = [];\n\n      for (var i = 0; i < 24; i++) {\n        segments.push(new TimeSegment({\n          name: i,\n          segmentType: 'hour',\n          disableTimetable: true\n        }));\n      }\n\n      return segments;\n    }\n\n    function _getDaysForMonth() {\n      var segments = [],\n          fromDate = new Date($scope.options.from),\n          month = fromDate.getMonth() + 1,\n          daysInMonth = new Date(fromDate.getFullYear(), month, 0).getDate();\n\n      for (var i = 1; i <= daysInMonth; i++) {\n        segments.push(new TimeSegment({\n          name: month + '/' + (i < 10 ? '0' + i : i),\n          segmentType: 'month-day',\n          disableTimetable: true\n        }));\n      }\n\n      return segments;\n    }\n\n    function _getDaysForRange() {\n      var segments = [],\n          fromDate = new Date($scope.options.from),\n          toDate = new Date($scope.options.to),\n          daysInRange = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000 * 60 * 60 * 24));\n\n      for (var i = 1; i <= daysInRange; i++) {\n        var date = new Date(fromDate);\n        date.setDate(date.getDate() + (i - 1));\n        segments.push(new TimeSegment({\n          name: date.getMonth() + 1 + '/' + date.getDate(),\n          segmentType: 'range-day',\n          disableTimetable: true\n        }));\n      }\n\n      return segments;\n    }\n\n    // Method to generate week days labels\n    // I use only days from locales. First day of the week is the same as Date() (0 - Sun)\n    function _getWeekDays() {\n      var defaultWeek = [].concat(_toConsumableArray($locale.DATETIME_FORMATS.SHORTDAY)),\n          alteredWeek = defaultWeek.splice($scope.options.firstDay || 0, defaultWeek.length),\n          preparedWeek = [].concat(_toConsumableArray(alteredWeek), _toConsumableArray(defaultWeek)),\n          segments = [];\n\n      preparedWeek.forEach(function (day) {\n        segments.push(new TimeSegment({\n          name: day,\n          segmentType: 'week-day',\n          disableTimetable: true\n        }));\n      });\n\n      return segments;\n    }\n  }];\n\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      rows: '='\n    },\n    controller: controller,\n    template: _timePlannerContainerTemplate2.default\n  };\n}]);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _timePlannerRowTemplate = __webpack_require__(14);\n\nvar _timePlannerRowTemplate2 = _interopRequireDefault(_timePlannerRowTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('timePlannerRowDirective', ['timeSegment', 'timetable']).directive('timePlannerRow', function () {\n  var controller = ['$scope', '$rootScope', 'TimeSegment', 'Timetable', function ($scope, $rootScope, TimeSegment, Timetable) {\n    var _methods = {\n      week: {\n        fillSegments: _fillSegmentsForWeek,\n        setRange: _setRangeForDay\n      },\n      day: {\n        fillSegments: _fillSegmentsForDay,\n        setRange: _setRangeForHour\n      },\n      month: {\n        fillSegments: _fillSegmentsForMonth,\n        setRange: _setRangeForDay\n      },\n      range: {\n        fillSegments: _fillSegmentsForRange,\n        setRange: _setRangeForDay\n      }\n    };\n\n    $scope.showCriticalItems = _showCriticalItems;\n\n    // INIT\n    $scope.$watchCollection('options', _prepareItems);\n\n    function _showCriticalItems(criticalItems) {\n      $rootScope.$broadcast('ATP_SHOW_CRITICAL_ITEMS', criticalItems);\n    }\n\n    // Generate segments for each row\n    function _prepareItems() {\n      $scope.row.segments = [];\n      $scope.row.hours = 0;\n      $scope.row.disableTimetable = $scope.row.disableTimetable || ['month', 'range'].includes($scope.options.timeScope);\n\n      !$scope.row.disableTimetable && _normalizeRowTimetableData();\n\n      $scope.$parent.segments.forEach(function (segment, index) {\n        var timeSegment = new TimeSegment(_extends({}, segment, {\n          range: _methods[$scope.options.timeScope].setRange(index)\n        }));\n\n        if (!$scope.row.disableTimetable) {\n          var activeTimetable = _getTimetableForCurrentRange($scope.row.timetables, timeSegment.range);\n          timeSegment.timetable = $scope.row.timetables.length > 0 && activeTimetable && new Timetable(activeTimetable);\n\n          timeSegment.toggleDisabled(!activeTimetable || !timeSegment.timetable.validate(timeSegment.range));\n        }\n\n        $scope.row.segments.push(timeSegment);\n      });\n\n      $scope.row.items.forEach(_methods[$scope.options.timeScope].fillSegments);\n    }\n\n    function _normalizeRowTimetableData() {\n      $scope.row.timetablesNames = [];\n      $scope.row.timetablesClasses = {\n        'timetable-type-on-call': false,\n        'timetable-type-night-shift': false\n      };\n      $scope.row.timetables.forEach(function (timetable) {\n        if (timetable.type !== 'on-call') {\n          !$scope.row.timetablesNames.includes(timetable.name) && $scope.row.timetablesNames.push(timetable.name);\n          if (timetable.type === 'night-shift') {\n            $scope.row.timetablesClasses['timetable-type-night-shift'] = true;\n          }\n        } else {\n          $scope.row.timetablesClasses['timetable-type-on-call'] = true;\n        }\n      });\n\n      if (!$scope.row.timetablesNames.length) {\n        $scope.row.timetablesNames.push('N/A');\n      }\n    }\n\n    function _getTimetableForCurrentRange(timetables, segmentRange) {\n      return timetables.find(function (timetable) {\n        return timetable.type !== 'on-call' || // We don't need on-call types here\n        segmentRange[1] > timetable.boundaries.from && timetable.boundaries.to < segmentRange[0];\n      });\n    }\n\n    function _setRangeForDay(index) {\n      var rangeFrom = new Date($scope.options.from),\n          rangeTo = new Date($scope.options.to),\n          firstDate = rangeFrom.getDate();\n\n      rangeFrom = rangeFrom.setDate(firstDate + index);\n      rangeTo = rangeTo.setDate(firstDate + index);\n      return [rangeFrom, rangeTo];\n    }\n\n    function _setRangeForHour(index) {\n      var rangeFrom = new Date($scope.$parent.options.from),\n          rangeTo = new Date($scope.$parent.options.to);\n\n      rangeFrom = rangeFrom.setHours(index);\n      rangeTo = rangeTo.setHours(index);\n      return [rangeFrom, rangeTo];\n    }\n\n    function _fillSegmentsForRange(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength = void 0,\n          firstDayNumber = void 0;\n\n      schedule.scheduledStart.setHours(0, 0, 0, 0);\n      schedule.scheduledEnd.setHours(23, 59, 59, 999);\n\n      schedule = _setBoundaries(schedule);\n      firstDayNumber = ($scope.$parent.options.from.getTime() - schedule.scheduledStart.getTime()) / msInDay;\n\n      itemLength = Math.ceil(Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay));\n\n      for (var i = 0; i < itemLength; i++) {\n        if ($scope.row.segments[firstDayNumber + i] && !$scope.row.segments[firstDayNumber + i].disabled) {\n          $scope.row.segments[firstDayNumber + i].addItem(item);\n\n          if (!$scope.options.disableCounter) {\n            $scope.row.hours += 8;\n          }\n        }\n      }\n    }\n\n    function _fillSegmentsForMonth(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength = void 0,\n          firstDayNumber = void 0;\n\n      schedule.scheduledStart.setHours(0, 0, 0, 0);\n      schedule.scheduledEnd.setHours(23, 59, 59, 999);\n\n      schedule = _setBoundaries(schedule);\n      firstDayNumber = schedule.scheduledStart.getDate() - 1;\n\n      itemLength = Math.ceil(Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay));\n\n      for (var i = 0; i < itemLength; i++) {\n        if ($scope.row.segments[firstDayNumber + i] && !$scope.row.segments[firstDayNumber + i].disabled) {\n          $scope.row.segments[firstDayNumber + i].addItem(item);\n\n          if (!$scope.options.disableCounter) {\n            $scope.row.hours += 8;\n          }\n        }\n      }\n    }\n\n    // Fill each segment with items. This method is solely for week time scope\n    function _fillSegmentsForWeek(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength = void 0,\n          firstDayNumber = void 0;\n\n      schedule.scheduledStart.setHours(0, 0, 0, 0);\n      schedule.scheduledEnd.setHours(23, 59, 59, 999);\n\n      schedule = _setBoundaries(schedule);\n      firstDayNumber = schedule.scheduledStart.getDay();\n\n      itemLength = Math.ceil(Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay));\n\n      for (var i = 0; i < itemLength; i++) {\n        if ($scope.row.segments[firstDayNumber + i] && !$scope.row.segments[firstDayNumber + i].disabled) {\n          $scope.row.segments[firstDayNumber + i].addItem(item);\n\n          if (!$scope.options.disableCounter) {\n            $scope.row.hours += 8;\n          }\n        }\n      }\n    }\n\n    // Fill each segment with items. This method is solely for day time scope\n    function _fillSegmentsForDay(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          itemLength = void 0,\n          firstHour = void 0,\n          overlap = void 0;\n\n      schedule = _setBoundaries(schedule);\n      firstHour = schedule.scheduledStart.getHours();\n      overlap = schedule.scheduledStart.getHours() > schedule.scheduledEnd.getHours();\n      itemLength = (overlap ? 24 : schedule.scheduledEnd.getHours()) - schedule.scheduledStart.getHours();\n      itemLength += schedule.scheduledEnd.getMinutes() === 0 ? 0 : 1; // if it ends with 00 - we don't count that hour\n\n      for (var i = 0; i < itemLength; i++) {\n        if ($scope.row.segments[firstHour + i] && !$scope.row.segments[firstHour + i].disabled) {\n          $scope.row.segments[firstHour + i].addItem(item);\n\n          if (!$scope.options.disableCounter) {\n            $scope.row.hours++;\n          }\n        }\n      }\n    }\n\n    // Set boundaries for item inside the planner\n    function _setBoundaries(schedule) {\n      schedule.scheduledStart = schedule.scheduledStart.getTime() < $scope.$parent.options.from.getTime() ? $scope.$parent.options.from : schedule.scheduledStart;\n\n      schedule.scheduledEnd = schedule.scheduledEnd.getTime() > $scope.$parent.options.to.getTime() ? $scope.$parent.options.to : schedule.scheduledEnd;\n\n      // If item cannot be placed in boundaries, it should have zero diff between start and end\n      if (schedule.scheduledStart.getTime() > schedule.scheduledEnd.getTime()) {\n        schedule.scheduledStart = schedule.scheduledEnd;\n      }\n\n      return schedule;\n    }\n  }];\n\n  return {\n    restrict: 'A',\n    template: _timePlannerRowTemplate2.default,\n    controller: controller\n  };\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nangular.module('timeSegment', []).factory('TimeSegment', [function () {\n  var TimeSegment = function () {\n    function TimeSegment(params) {\n      _classCallCheck(this, TimeSegment);\n\n      this.name = params.name;\n      this.segmentType = params.segmentType;\n      this.items = params.items || [];\n      this.range = params.range || [];\n      this.disabled = params.disabled || false;\n    }\n\n    _createClass(TimeSegment, [{\n      key: 'addItem',\n      value: function addItem(item) {\n        this.items = [].concat(_toConsumableArray(this.items), [item]);\n      }\n    }, {\n      key: 'removeItem',\n      value: function removeItem(itemForRemove) {\n        this.items = this.items.filter(function (item) {\n          return item.id !== itemForRemove.id;\n        });\n      }\n    }, {\n      key: 'toggleDisabled',\n      value: function toggleDisabled(boolean) {\n        this.disabled = typeof boolean === 'undefined' ? !this.disabled : boolean;\n      }\n    }]);\n\n    return TimeSegment;\n  }();\n\n  return TimeSegment;\n}]);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nangular.module('timetable', []).factory('Timetable', [function () {\n  var Timetable = function () {\n    function Timetable(params) {\n      _classCallCheck(this, Timetable);\n\n      this.start = [Number(params.start[0]), Number(params.start[1])];\n      this.end = [Number(params.end[0]), Number(params.end[1])];\n      this.breakStart = params.breakStart;\n      this.breakEnd = params.breakEnd;\n      this.name = params.name || 'N/A';\n      this.type = params.type;\n      this.boundaries = params.boundaries;\n      this.weekAvailability = params.weekAvailability;\n    }\n\n    _createClass(Timetable, [{\n      key: 'validate',\n      value: function validate(range) {\n        var startDate = new Date(range[0]),\n            endDate = new Date(range[1]),\n            weekDay = startDate.getDay(),\n            startHour = startDate.getHours(),\n            endHour = endDate.getHours(),\n            overlap = this.start[0] > this.end[0];\n\n        if (startHour === endHour) {\n          // if it's an hour, we need to validate hours and day\n          return this.weekAvailability[weekDay] && (overlap ? startHour >= this.start[0] && endHour < 24 || startHour >= 0 && endHour < this.end[0] : startHour >= this.start[0] && endHour < this.end[0]);\n        } else {\n          // if it's a day, we need to validate only day\n          return this.weekAvailability[weekDay];\n        }\n      }\n    }]);\n\n    return Timetable;\n  }();\n\n  return Timetable;\n}]);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n(function(angular) {\n    'use strict';\n\n    function isDnDsSupported() {\n        return 'ondrag' in document.createElement('a');\n    }\n\n    function determineEffectAllowed(e) {\n        if(e.originalEvent) {\n          e.dataTransfer = e.originalEvent.dataTransfer;\n        }\n\n        // Chrome doesn't set dropEffect, so we have to work it out ourselves\n        if (typeof e.dataTransfer !== 'undefined' && e.dataTransfer.dropEffect === 'none') {\n            if (e.dataTransfer.effectAllowed === 'copy' ||\n                e.dataTransfer.effectAllowed === 'move') {\n                e.dataTransfer.dropEffect = e.dataTransfer.effectAllowed;\n            } else if (e.dataTransfer.effectAllowed === 'copyMove' || e.dataTransfer.effectAllowed === 'copymove') {\n                e.dataTransfer.dropEffect = e.ctrlKey ? 'copy' : 'move';\n            }\n        }\n    }\n\n    if (!isDnDsSupported()) {\n        angular.module('ang-drag-drop', []);\n        return;\n    }\n\n    var module = angular.module('ang-drag-drop', []);\n\n    module.directive('uiDraggable', ['$parse', '$rootScope', '$dragImage', function($parse, $rootScope, $dragImage) {\n        return function(scope, element, attrs) {\n            var isDragHandleUsed = false,\n                dragHandleClass,\n                draggingClass = attrs.draggingClass || 'on-dragging',\n                dragTarget;\n\n            element.attr('draggable', false);\n\n            scope.$watch(attrs.uiDraggable, function(newValue) {\n                if (newValue) {\n                    element.attr('draggable', newValue);\n                    element.bind('dragend', dragendHandler);\n                    element.bind('dragstart', dragstartHandler);\n                }\n                else {\n                    element.removeAttr('draggable');\n                    element.unbind('dragend', dragendHandler);\n                    element.unbind('dragstart', dragstartHandler);\n                }\n\n            });\n\n            if (angular.isString(attrs.dragHandleClass)) {\n                isDragHandleUsed = true;\n                dragHandleClass = attrs.dragHandleClass.trim() || 'drag-handle';\n\n                element.bind('mousedown', function(e) {\n                    dragTarget = e.target;\n                });\n            }\n\n            function dragendHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                setTimeout(function() {\n                    element.unbind('$destroy', dragendHandler);\n                }, 0);\n                var sendChannel = attrs.dragChannel || 'defaultchannel';\n                $rootScope.$broadcast('ANGULAR_DRAG_END', e, sendChannel);\n\n                determineEffectAllowed(e);\n\n                if (e.dataTransfer && e.dataTransfer.dropEffect !== 'none') {\n                    if (attrs.onDropSuccess) {\n                        var onDropSuccessFn = $parse(attrs.onDropSuccess);\n                        scope.$evalAsync(function() {\n                            onDropSuccessFn(scope, {$event: e});\n                        });\n                    }\n                }else if (e.dataTransfer && e.dataTransfer.dropEffect === 'none'){\n                    if (attrs.onDropFailure) {\n                        var onDropFailureFn = $parse(attrs.onDropFailure);\n                        scope.$evalAsync(function() {\n                            onDropFailureFn(scope, {$event: e});\n                        });\n                    }\n                }\n                element.removeClass(draggingClass);\n            }\n\n            function setDragElement(e, dragImageElementId) {\n                var dragImageElementFn;\n\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                dragImageElementFn = $parse(dragImageElementId);\n\n                scope.$apply(function() {\n                    var elementId = dragImageElementFn(scope, {$event: e}),\n                        dragElement;\n\n                    if (!(elementId && angular.isString(elementId))) {\n                        return;\n                    }\n\n                    dragElement = document.getElementById(elementId);\n\n                    if (!dragElement) {\n                        return;\n                    }\n\n                    e.dataTransfer.setDragImage(dragElement, 0, 0);\n                });\n            }\n\n            function dragstartHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                var isDragAllowed = !isDragHandleUsed || dragTarget.classList.contains(dragHandleClass);\n\n                if (isDragAllowed) {\n                    var sendChannel = attrs.dragChannel || 'defaultchannel';\n                    var dragData = '';\n                    if (attrs.drag) {\n                        dragData = scope.$eval(attrs.drag);\n                    }\n\n                    var dragImage = attrs.dragImage || null;\n\n                    element.addClass(draggingClass);\n                    element.bind('$destroy', dragendHandler);\n\n                    //Code to make sure that the setDragImage is available. IE 10, 11, and Opera do not support setDragImage.\n                    var hasNativeDraggable = !(document.uniqueID || window.opera);\n\n                    //If there is a draggable image passed in, then set the image to be dragged.\n                    if (dragImage && hasNativeDraggable) {\n                        var dragImageFn = $parse(attrs.dragImage);\n                        scope.$apply(function() {\n                            var dragImageParameters = dragImageFn(scope, {$event: e});\n                            if (dragImageParameters) {\n                                if (angular.isString(dragImageParameters)) {\n                                    dragImageParameters = $dragImage.generate(dragImageParameters);\n                                }\n                                if (dragImageParameters.image) {\n                                    var xOffset = dragImageParameters.xOffset || 0,\n                                        yOffset = dragImageParameters.yOffset || 0;\n                                    e.dataTransfer.setDragImage(dragImageParameters.image, xOffset, yOffset);\n                                }\n                            }\n                        });\n                    } else if (attrs.dragImageElementId) {\n                        setDragElement(e, attrs.dragImageElementId);\n                    }\n\n                    var offset = {x: e.offsetX, y: e.offsetY};\n                    var transferDataObject = {data: dragData, channel: sendChannel, offset: offset};\n                    var transferDataText = angular.toJson(transferDataObject);\n\n                    e.dataTransfer.setData('text', transferDataText);\n                    e.dataTransfer.effectAllowed = 'copyMove';\n\n                    $rootScope.$broadcast('ANGULAR_DRAG_START', e, sendChannel, transferDataObject);\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n    }\n    ]);\n\n    module.directive('uiOnDrop', ['$parse', '$rootScope', function($parse, $rootScope) {\n        return function(scope, element, attr) {\n            var dragging = 0; //Ref. http://stackoverflow.com/a/10906204\n            var dropChannel = attr.dropChannel || 'defaultchannel';\n            var dragChannel = '';\n            var dragEnterClass = attr.dragEnterClass || 'on-drag-enter';\n            var dragHoverClass = attr.dragHoverClass || 'on-drag-hover';\n            var customDragEnterEvent = $parse(attr.onDragEnter);\n            var customDragLeaveEvent = $parse(attr.onDragLeave);\n\n            function calculateDropOffset(e) {\n                var offset = {\n                    x: e.offsetX,\n                    y: e.offsetY\n                };\n                var target = e.target;\n\n                while (target !== element[0]) {\n                    offset.x = offset.x + target.offsetLeft;\n                    offset.y = offset.y + target.offsetTop;\n\n                    target = target.offsetParent;\n                    if (!target) {\n                        return null;\n                    }\n                }\n\n                return offset;\n            }\n\n            function onDragOver(e) {\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                var uiOnDragOverFn = $parse(attr.uiOnDragOver);\n                scope.$evalAsync(function() {\n                    uiOnDragOverFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                return false;\n            }\n\n            function onDragLeave(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                dragging--;\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragLeaveEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.addClass(dragEnterClass);\n                    element.removeClass(dragHoverClass);\n                }\n\n                var uiOnDragLeaveFn = $parse(attr.uiOnDragLeave);\n                scope.$evalAsync(function() {\n                    uiOnDragLeaveFn(scope, {$event: e, $channel: dropChannel});\n                });\n            }\n\n            function onDragEnter(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragEnterEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.removeClass(dragEnterClass);\n                    element.addClass(dragHoverClass);\n                }\n                dragging++;\n\n                var uiOnDragEnterFn = $parse(attr.uiOnDragEnter);\n                scope.$evalAsync(function() {\n                    uiOnDragEnterFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                $rootScope.$broadcast('ANGULAR_HOVER', dragChannel);\n            }\n\n            function onDrop(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation(); // Necessary. Allows us to drop.\n                }\n\n                var sendData = e.dataTransfer.getData('text');\n                sendData = angular.fromJson(sendData);\n\n                var dropOffset = calculateDropOffset(e);\n                \n                var position = dropOffset ? {\n                    x: dropOffset.x - sendData.offset.x,\n                    y: dropOffset.y - sendData.offset.y\n                } : null;\n                \n                determineEffectAllowed(e);\n\n                var uiOnDropFn = $parse(attr.uiOnDrop);\n                scope.$evalAsync(function() {\n                    uiOnDropFn(scope, {$data: sendData.data, $event: e, $channel: sendData.channel, $position: position});\n                });\n                element.removeClass(dragEnterClass);\n                dragging = 0;\n            }\n            \n            function isDragChannelAccepted(dragChannel, dropChannel) {\n                if (dropChannel === '*') {\n                    return true;\n                }\n\n                var channelMatchPattern = new RegExp('(\\\\s|[,])+(' + dragChannel + ')(\\\\s|[,])+', 'i');\n\n                return channelMatchPattern.test(',' + dropChannel + ',');\n            }\n\n            function preventNativeDnD(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                e.dataTransfer.dropEffect = 'none';\n                return false;\n            }\n\n            var deregisterDragStart = $rootScope.$on('ANGULAR_DRAG_START', function(_, e, channel, transferDataObject) {\n                dragChannel = channel;\n\n                var valid = true;\n\n                if (!isDragChannelAccepted(channel, dropChannel)) {\n                    valid = false;\n                }\n\n                if (valid && attr.dropValidate) {\n                    var validateFn = $parse(attr.dropValidate);\n                    valid = validateFn(scope, {\n                        $drop: {scope: scope, element: element},\n                        $event: e,\n                        $data: transferDataObject.data,\n                        $channel: transferDataObject.channel\n                    });\n                }\n\n                if (valid) {\n                    element.bind('dragover', onDragOver);\n                    element.bind('dragenter', onDragEnter);\n                    element.bind('dragleave', onDragLeave);\n                    element.bind('drop', onDrop);\n\n                    element.addClass(dragEnterClass);\n                } else {\n                    element.bind('dragover', preventNativeDnD);\n                    element.bind('dragenter', preventNativeDnD);\n                    element.bind('dragleave', preventNativeDnD);\n                    element.bind('drop', preventNativeDnD);\n\n                    element.removeClass(dragEnterClass);\n                }\n\n            });\n\n\n            var deregisterDragEnd = $rootScope.$on('ANGULAR_DRAG_END', function() {\n                element.unbind('dragover', onDragOver);\n                element.unbind('dragenter', onDragEnter);\n                element.unbind('dragleave', onDragLeave);\n\n                element.unbind('drop', onDrop);\n                element.removeClass(dragHoverClass);\n                element.removeClass(dragEnterClass);\n\n                element.unbind('dragover', preventNativeDnD);\n                element.unbind('dragenter', preventNativeDnD);\n                element.unbind('dragleave', preventNativeDnD);\n                element.unbind('drop', preventNativeDnD);\n            });\n\n            scope.$on('$destroy', function() {\n                deregisterDragStart();\n                deregisterDragEnd();\n            });\n\n\n            attr.$observe('dropChannel', function(value) {\n                if (value) {\n                    dropChannel = value;\n                }\n            });\n\n\n        };\n    }\n    ]);\n\n    module.constant('$dragImageConfig', {\n        height: 20,\n        width: 200,\n        padding: 10,\n        font: 'bold 11px Arial',\n        fontColor: '#eee8d5',\n        backgroundColor: '#93a1a1',\n        xOffset: 0,\n        yOffset: 0\n    });\n\n    module.service('$dragImage', ['$dragImageConfig', function(defaultConfig) {\n        var ELLIPSIS = '…';\n\n        function fitString(canvas, text, config) {\n            var width = canvas.measureText(text).width;\n            if (width < config.width) {\n                return text;\n            }\n            while (width + config.padding > config.width) {\n                text = text.substring(0, text.length - 1);\n                width = canvas.measureText(text + ELLIPSIS).width;\n            }\n            return text + ELLIPSIS;\n        }\n\n        this.generate = function(text, options) {\n            var config = angular.extend({}, defaultConfig, options || {});\n            var el = document.createElement('canvas');\n\n            el.height = config.height;\n            el.width = config.width;\n\n            var canvas = el.getContext('2d');\n\n            canvas.fillStyle = config.backgroundColor;\n            canvas.fillRect(0, 0, config.width, config.height);\n            canvas.font = config.font;\n            canvas.fillStyle = config.fontColor;\n\n            var title = fitString(canvas, text, config);\n            canvas.fillText(title, 4, config.padding + 4);\n\n            var image = new Image();\n            image.src = el.toDataURL();\n\n            return {\n                image: image,\n                xOffset: config.xOffset,\n                yOffset: config.yOffset\n            };\n        };\n    }\n    ]);\n\n}(angular));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(8);\nmodule.exports = 'ang-drag-drop';\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(3);\n\n__webpack_require__(4);\n\n__webpack_require__(2);\n\n__webpack_require__(5);\n\n__webpack_require__(6);\n\n__webpack_require__(1);\n\n__webpack_require__(7);\n\nangular.module('angularTimePlanner', ['timePlannerContainerDirective', 'timePlannerRowDirective', 'timePlannerCellDirective']).constant('LOCALES', {\n  DEFAULT: 'en-us',\n  AVAILABLE: ['en-us']\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=atp-segment-item-wrapper><div class=atp-segment-item ng-repeat=\\\"item in segment.items\\\" ng-class=\\\"[item.segmentType, {'highlighted': (item.id === highlightedItem.id)}]\\\" ng-mouseenter=onHoverEvent(item) ng-mouseleave=onHoverEvent() ng-click=onClickEvent(item)></div></div>\";\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=atp-container><div class=atp-head><div class=atp-row><div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{locale.labels.rowTitle}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable><span class=atpc-label>{{locale.labels.timetableTitle}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=!options.disableCounter><span class=atpc-label>{{locale.labels.counterTitle.hours}}</span></div><div class=\\\"atp-cell atpr-critical-items\\\"></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                      'month-day-segment': options.timeScope === 'month',\\n                      'days-{{segments.length}}': options.timeScope === 'month',\\n                      'range-day-segment': options.timeScope === 'range',\\n                      'hour-segment': options.timeScope === 'day'}\\\"><span class=atpc-label>{{segment.name}}</span></div></div></div><div class=atp-items-wrapper><div class=atp-row ng-repeat=\\\"row in rows\\\" drop-channel=\\\"{{options.editable && row.editable && options.dropChannel}}\\\" ui-on-drop=\\\"onDropEvent($data, row.id)\\\" time-planner-row></div><current-time-marker class=atp-current-time-marker ng-if=!options.disableCurrentTimeMarker /></div></div>\";\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{row.title}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable ng-class=row.timetablesClasses><span class=atpc-label title=\\\"{{row.timetablesNames.join(', ')}}\\\">{{row.timetablesNames.join(', ')}}</span></div><div class=\\\"atp-cell atpr-critical-items\\\" ng-click=showCriticalItems(row.criticalItems) ng-class=\\\"{'active': row.criticalItems.length > 0}\\\"></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=!options.disableCounter><span class=atpc-label>{{row.hours || 0}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in row.segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                'hour-segment': options.timeScope === 'day',\\n                'month-day-segment': options.timeScope === 'month',\\n                'days-{{row.segments.length}}': options.timeScope === 'month',\\n                'range-day-segment': options.timeScope === 'range',\\n                'unavailable-segment': segment.disabled}\\\" time-planner-cell></div>\";\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./time-planner-locale_en-us\": 0,\n\t\"./time-planner-locale_en-us.js\": 0\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// angular-time-planner.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9554c8b8d202a21714db","module.exports = {\n  labels: {\n    rowTitle: 'Tasks',\n    counterTitle: {\n      days: 'Days',\n      hours: 'Hours'\n    },\n    timetableTitle: 'Timetable'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerLocales/time-planner-locale_en-us.js","angular\n  .module('currentTimeMarkerDirective', [])\n  .directive('currentTimeMarker', ['$interval', ($interval) => {\n    const link = (scope, element) => {\n      let interval, initialOffset, parentWidth, segmentsWidth;\n\n      angular.element(_setStartPosition);\n      scope.$watch('options.timeScope', _updatePosition);\n\n      function _setStartPosition() {\n        let segment, parent;\n\n        initialOffset = (segment = document.querySelector('.atp-items-wrapper .atp-segment')) ?\n          segment.offsetLeft : 0;\n        parentWidth = (parent = document.querySelector('.atp-items-wrapper')) ?\n          parent.offsetWidth : 0;\n\n        segmentsWidth = parentWidth - initialOffset;\n        element.css({left: `${initialOffset}px`});\n        _updatePosition();\n      }\n\n      function _updatePosition() {\n        const offset = initialOffset + _calculateOffset();\n        element.css({\n          left: `${offset}px`,\n          opacity: initialOffset === offset ? 0 : 1\n        });\n      }\n\n      function _calculateOffset() {\n        switch (scope.options.timeScope) {\n          case 'day': return _calculateOffsetForDay();\n          case 'week': return _calculateOffsetForWeek();\n          case 'month': return 0;\n          case 'range': return 0;\n        }\n      }\n\n      function _calculateOffsetForDay() {\n        const\n          now = new Date(),\n          hour = now.getHours(),\n          quarter = Math.floor(now.getMinutes() / 15);\n        return (segmentsWidth / 24) * (hour + 0.25 * (quarter > 0 ? quarter : 0));\n      }\n\n      function _calculateOffsetForWeek() {\n        const\n          now = new Date(),\n          day = now.getDay(),\n          quarter = Math.floor(now.getHours() / 6);\n        return (segmentsWidth / 7) * (day + 0.25 * (quarter > 0 ? quarter : 0));\n      }\n\n\n      function _startInterval() {\n        interval = $interval(function() {\n          _updatePosition();\n        }, 60000);\n      }\n\n      function _stopInterval() {\n        $interval.cancel(interval);\n      }\n\n      // Live update\n      _startInterval();\n      element.on('$destroy', _stopInterval);\n    };\n\n    return {\n      restrict: 'E',\n      link: link,\n      template: '<div></div>'\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/currentTimeMarker/currentTimeMarkerDirective.js","import template from './timePlannerCellTemplate.html';\n\nangular\n  .module('timePlannerCellDirective', [])\n  .directive('timePlannerCell', ['$rootScope', ($rootScope) => {\n    const controller = ['$scope', ($scope) => {\n      // Scope functions\n      $scope.onHoverEvent = (item) => { $scope.$parent.highlightedItem = item };\n      $scope.onClickEvent = (item) => $rootScope.$broadcast('ATP_SEGMENT_ON_CLICK', item);\n\n    }];\n\n    return {\n      restrict: 'A',\n      template: template,\n      controller: controller\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerCell/timePlannerCellDirective.js","import template from './timePlannerContainerTemplate.html';\nimport merge from 'deepmerge';\nimport 'angular-native-dragdrop';\n\n\nangular\n  .module('timePlannerContainerDirective', ['ang-drag-drop', 'timeSegment', 'currentTimeMarkerDirective'])\n  .directive('timePlannerContainer', ['$rootScope', '$locale', 'LOCALES', ($rootScope, $locale, LOCALES) => {\n    const controller = ['$scope', 'TimeSegment', ($scope, TimeSegment) => {\n      let\n        _localeId = LOCALES.AVAILABLE.includes($locale.id) ? $locale.id : LOCALES.DEFAULT,\n        _defaultOptions = {\n          timeScope: 'week',\n          editable: false,\n          dropChannel: 'atp-row'\n        };\n\n      $scope.$watchCollection('options', _init);\n\n      // Scope functions\n      $scope.onDropEvent = (item, rowId) => $rootScope.$broadcast('ATP_ITEM_ON_DROP', {id: rowId, item: item});\n\n      function _init() {\n        // I use private variables since we're not changing options from inside and it's easier to watch and merge scope\n\n        // merge defaults with user options\n        $scope.options = merge(_defaultOptions, $scope.options);\n        // we use an object with merged default locale and scope override(if any)\n        $scope.locale = merge(\n          require(`../timePlannerLocales/time-planner-locale_${_localeId}`),\n          $scope.options.locale || {}\n        );\n        // fill segments for current options\n        $scope.segments = _getSegments();\n      }\n\n      // Get segments for planner, hours, week, dates range. Default is a week.\n      function _getSegments() {\n        switch ($scope.options.timeScope) {\n          case 'day':\n            return _getHours();\n          case 'range':\n            return _getDaysForRange();\n          case 'month':\n            return _getDaysForMonth();\n          case 'week':\n          default:\n            return _getWeekDays();\n        }\n      }\n\n      // Method to generate hours labels\n      function _getHours() {\n        const segments = [];\n\n        for (let i = 0; i < 24; i++) {\n          segments.push(new TimeSegment({\n            name: i,\n            segmentType: 'hour',\n            disableTimetable: true\n          }));\n        }\n\n        return segments;\n      }\n\n      function _getDaysForMonth() {\n        const\n          segments = [],\n          fromDate = new Date($scope.options.from),\n          month = fromDate.getMonth() + 1,\n          daysInMonth = new Date(fromDate.getFullYear(), month, 0).getDate();\n\n        for (let i = 1; i <= daysInMonth; i++) {\n          segments.push(new TimeSegment({\n            name: `${month}/${i < 10 ? '0' + i : i}`,\n            segmentType: 'month-day',\n            disableTimetable: true\n          }))\n        }\n\n        return segments;\n      }\n\n      function _getDaysForRange() {\n        const\n          segments = [],\n          fromDate = new Date($scope.options.from),\n          toDate = new Date($scope.options.to),\n          daysInRange = Math.ceil((toDate.getTime() - fromDate.getTime()) / (1000*60*60*24));\n\n        for (let i = 1; i <= daysInRange; i++) {\n          let date = new Date(fromDate);\n          date.setDate(date.getDate() + (i - 1));\n          segments.push(new TimeSegment({\n            name: `${date.getMonth() + 1}/${date.getDate()}`,\n            segmentType: 'range-day',\n            disableTimetable: true\n          }))\n        }\n\n        return segments;\n      }\n\n      // Method to generate week days labels\n      // I use only days from locales. First day of the week is the same as Date() (0 - Sun)\n      function _getWeekDays() {\n        const\n          defaultWeek = [...$locale.DATETIME_FORMATS.SHORTDAY],\n          alteredWeek = defaultWeek.splice($scope.options.firstDay  || 0, defaultWeek.length),\n          preparedWeek = [...alteredWeek, ...defaultWeek],\n          segments = [];\n\n        preparedWeek.forEach(day => {\n          segments.push(new TimeSegment({\n            name: day,\n            segmentType: 'week-day',\n            disableTimetable: true\n          }));\n        });\n\n        return segments;\n      }\n\n    }];\n\n    return {\n      restrict: 'E',\n      scope: {\n        options: '=',\n        rows: '='\n      },\n      controller: controller,\n      template: template\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerContainer/timePlannerContainerDirective.js","import template from './timePlannerRowTemplate.html';\n\nangular\n  .module('timePlannerRowDirective', ['timeSegment', 'timetable'])\n  .directive('timePlannerRow', () => {\n    const controller = ['$scope', '$rootScope', 'TimeSegment', 'Timetable', ($scope, $rootScope, TimeSegment, Timetable) => {\n      const _methods = {\n        week: {\n          fillSegments: _fillSegmentsForWeek,\n          setRange: _setRangeForDay\n        },\n        day: {\n          fillSegments: _fillSegmentsForDay,\n          setRange: _setRangeForHour\n        },\n        month: {\n          fillSegments: _fillSegmentsForMonth,\n          setRange: _setRangeForDay\n        },\n        range: {\n          fillSegments: _fillSegmentsForRange,\n          setRange: _setRangeForDay\n        }\n      };\n\n      $scope.showCriticalItems = _showCriticalItems;\n\n      // INIT\n      $scope.$watchCollection('options', _prepareItems);\n\n      function _showCriticalItems(criticalItems) {\n        $rootScope.$broadcast('ATP_SHOW_CRITICAL_ITEMS', criticalItems);\n      }\n\n      // Generate segments for each row\n      function _prepareItems() {\n        $scope.row.segments = [];\n        $scope.row.hours = 0;\n        $scope.row.disableTimetable =\n          $scope.row.disableTimetable ||\n          ['month', 'range'].includes($scope.options.timeScope);\n\n        !$scope.row.disableTimetable && _normalizeRowTimetableData();\n\n        $scope.$parent.segments.forEach((segment, index) => {\n          const timeSegment = new TimeSegment({\n            ...segment,\n            range: _methods[$scope.options.timeScope].setRange(index)\n          });\n\n          if (!$scope.row.disableTimetable) {\n            let activeTimetable = _getTimetableForCurrentRange($scope.row.timetables, timeSegment.range);\n            timeSegment.timetable =\n              $scope.row.timetables.length > 0 &&\n              activeTimetable &&\n              new Timetable(activeTimetable);\n\n            timeSegment.toggleDisabled(!activeTimetable || !timeSegment.timetable.validate(timeSegment.range));\n          }\n\n          $scope.row.segments.push(timeSegment);\n        });\n\n        $scope.row.items.forEach(_methods[$scope.options.timeScope].fillSegments);\n      }\n\n      function _normalizeRowTimetableData() {\n        $scope.row.timetablesNames = [];\n        $scope.row.timetablesClasses = {\n          'timetable-type-on-call': false,\n          'timetable-type-night-shift': false,\n        };\n        $scope.row.timetables.forEach(timetable => {\n          if (timetable.type !== 'on-call') {\n            !$scope.row.timetablesNames.includes(timetable.name) && $scope.row.timetablesNames.push(timetable.name);\n            if (timetable.type === 'night-shift') {\n              $scope.row.timetablesClasses['timetable-type-night-shift'] = true;\n            }\n          } else {\n            $scope.row.timetablesClasses['timetable-type-on-call'] = true\n          }\n        });\n\n        if (!$scope.row.timetablesNames.length) {\n          $scope.row.timetablesNames.push('N/A');\n        }\n      }\n\n      function _getTimetableForCurrentRange(timetables, segmentRange) {\n        return timetables.find(timetable => {\n          return timetable.type !== 'on-call' || // We don't need on-call types here\n            (segmentRange[1] > timetable.boundaries.from && timetable.boundaries.to < segmentRange[0]);\n        });\n      }\n\n      function _setRangeForDay(index) {\n        let\n          rangeFrom = new Date($scope.options.from),\n          rangeTo = new Date($scope.options.to),\n          firstDate = rangeFrom.getDate();\n\n        rangeFrom = rangeFrom.setDate(firstDate + index);\n        rangeTo = rangeTo.setDate(firstDate + index);\n        return [rangeFrom, rangeTo]\n      }\n\n      function _setRangeForHour(index) {\n        let\n          rangeFrom = new Date($scope.$parent.options.from),\n          rangeTo = new Date($scope.$parent.options.to);\n\n        rangeFrom = rangeFrom.setHours(index);\n        rangeTo = rangeTo.setHours(index);\n        return [rangeFrom, rangeTo];\n      }\n\n      function _fillSegmentsForRange(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end),\n          },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength, firstDayNumber;\n\n        schedule.scheduledStart.setHours(0,0,0,0);\n        schedule.scheduledEnd.setHours(23,59,59,999);\n\n        schedule = _setBoundaries(schedule);\n        firstDayNumber =\n          ($scope.$parent.options.from.getTime() - schedule.scheduledStart.getTime()) /\n          msInDay;\n\n        itemLength = Math.ceil(\n          Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay)\n        );\n\n        for (let i = 0; i < itemLength; i++) {\n          if ($scope.row.segments[firstDayNumber + i] && !$scope.row.segments[firstDayNumber + i].disabled) {\n            $scope.row.segments[firstDayNumber + i].addItem(item);\n\n            if (!$scope.options.disableCounter) {\n              $scope.row.hours += 8;\n            }\n          }\n        }\n      }\n\n      function _fillSegmentsForMonth(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end),\n          },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength, firstDayNumber;\n\n        schedule.scheduledStart.setHours(0,0,0,0);\n        schedule.scheduledEnd.setHours(23,59,59,999);\n\n        schedule = _setBoundaries(schedule);\n        firstDayNumber = schedule.scheduledStart.getDate() - 1;\n\n        itemLength = Math.ceil(\n          Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay)\n        );\n\n        for (let i = 0; i < itemLength; i++) {\n          if ($scope.row.segments[firstDayNumber + i] && !$scope.row.segments[firstDayNumber + i].disabled) {\n            $scope.row.segments[firstDayNumber + i].addItem(item);\n\n            if (!$scope.options.disableCounter) {\n              $scope.row.hours += 8;\n            }\n          }\n        }\n      }\n\n      // Fill each segment with items. This method is solely for week time scope\n      function _fillSegmentsForWeek(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end),\n          },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength, firstDayNumber;\n\n        schedule.scheduledStart.setHours(0,0,0,0);\n        schedule.scheduledEnd.setHours(23,59,59,999);\n\n        schedule = _setBoundaries(schedule);\n        firstDayNumber = schedule.scheduledStart.getDay();\n\n        itemLength = Math.ceil(\n          Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay)\n        );\n\n        for (let i = 0; i < itemLength; i++) {\n          if ($scope.row.segments[firstDayNumber + i] && !$scope.row.segments[firstDayNumber + i].disabled) {\n            $scope.row.segments[firstDayNumber + i].addItem(item);\n\n            if (!$scope.options.disableCounter) {\n              $scope.row.hours += 8;\n            }\n          }\n        }\n      }\n\n      // Fill each segment with items. This method is solely for day time scope\n      function _fillSegmentsForDay(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end)\n          },\n          itemLength, firstHour, overlap;\n\n        schedule = _setBoundaries(schedule);\n        firstHour = schedule.scheduledStart.getHours();\n        overlap = schedule.scheduledStart.getHours() > schedule.scheduledEnd.getHours();\n        itemLength = (overlap ? 24 : schedule.scheduledEnd.getHours()) - schedule.scheduledStart.getHours();\n        itemLength += schedule.scheduledEnd.getMinutes() === 0 ? 0 : 1; // if it ends with 00 - we don't count that hour\n\n        for (let i = 0; i < itemLength; i++) {\n          if ($scope.row.segments[firstHour + i] && !$scope.row.segments[firstHour + i].disabled) {\n            $scope.row.segments[firstHour + i].addItem(item);\n\n            if (!$scope.options.disableCounter) {\n              $scope.row.hours++;\n            }\n          }\n        }\n      }\n\n      // Set boundaries for item inside the planner\n      function _setBoundaries(schedule) {\n        schedule.scheduledStart = schedule.scheduledStart.getTime() < $scope.$parent.options.from.getTime() ?\n          $scope.$parent.options.from : schedule.scheduledStart;\n\n        schedule.scheduledEnd = schedule.scheduledEnd.getTime() > $scope.$parent.options.to.getTime() ?\n          $scope.$parent.options.to : schedule.scheduledEnd;\n\n        // If item cannot be placed in boundaries, it should have zero diff between start and end\n        if (schedule.scheduledStart.getTime() > schedule.scheduledEnd.getTime()) {\n          schedule.scheduledStart = schedule.scheduledEnd;\n        }\n\n        return schedule;\n      }\n    }];\n\n    return {\n      restrict: 'A',\n      template: template,\n      controller: controller\n    };\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerRow/timePlannerRowDirective.js","angular\n  .module('timeSegment', [])\n  .factory('TimeSegment', [() => {\n    class TimeSegment {\n      constructor(params) {\n        this.name = params.name;\n        this.segmentType = params.segmentType;\n        this.items = params.items || [];\n        this.range = params.range || [];\n        this.disabled = params.disabled || false;\n      }\n\n      addItem(item) {\n        this.items = [...this.items, item];\n      }\n\n      removeItem(itemForRemove) {\n        this.items = this.items.filter(item => item.id !== itemForRemove.id)\n      }\n\n      toggleDisabled(boolean) {\n        this.disabled = typeof boolean === 'undefined' ? !this.disabled : boolean;\n      }\n    }\n\n    return TimeSegment;\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timeSegment/timeSegmentService.js","angular\n  .module('timetable', [])\n  .factory('Timetable', [() => {\n    class Timetable {\n      constructor(params) {\n        this.start = [Number(params.start[0]), Number(params.start[1])];\n        this.end = [Number(params.end[0]), Number(params.end[1])];\n        this.breakStart = params.breakStart;\n        this.breakEnd = params.breakEnd;\n        this.name = params.name || 'N/A';\n        this.type = params.type;\n        this.boundaries = params.boundaries;\n        this.weekAvailability = params.weekAvailability;\n      }\n\n      validate(range) {\n        const\n          startDate = new Date(range[0]),\n          endDate = new Date(range[1]),\n          weekDay = startDate.getDay(),\n          startHour = startDate.getHours(),\n          endHour = endDate.getHours(),\n          overlap = this.start[0] > this.end[0];\n\n        if (startHour === endHour) {\n          // if it's an hour, we need to validate hours and day\n          return this.weekAvailability[weekDay] &&\n            (overlap ?\n              (startHour >= this.start[0] && endHour < 24 || startHour >= 0 && endHour < this.end[0]) :\n              (startHour >= this.start[0] && endHour < this.end[0]));\n        } else {\n          // if it's a day, we need to validate only day\n          return this.weekAvailability[weekDay];\n        }\n      }\n    }\n\n    return Timetable;\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timetable/timetableService.js","(function(angular) {\n    'use strict';\n\n    function isDnDsSupported() {\n        return 'ondrag' in document.createElement('a');\n    }\n\n    function determineEffectAllowed(e) {\n        if(e.originalEvent) {\n          e.dataTransfer = e.originalEvent.dataTransfer;\n        }\n\n        // Chrome doesn't set dropEffect, so we have to work it out ourselves\n        if (typeof e.dataTransfer !== 'undefined' && e.dataTransfer.dropEffect === 'none') {\n            if (e.dataTransfer.effectAllowed === 'copy' ||\n                e.dataTransfer.effectAllowed === 'move') {\n                e.dataTransfer.dropEffect = e.dataTransfer.effectAllowed;\n            } else if (e.dataTransfer.effectAllowed === 'copyMove' || e.dataTransfer.effectAllowed === 'copymove') {\n                e.dataTransfer.dropEffect = e.ctrlKey ? 'copy' : 'move';\n            }\n        }\n    }\n\n    if (!isDnDsSupported()) {\n        angular.module('ang-drag-drop', []);\n        return;\n    }\n\n    var module = angular.module('ang-drag-drop', []);\n\n    module.directive('uiDraggable', ['$parse', '$rootScope', '$dragImage', function($parse, $rootScope, $dragImage) {\n        return function(scope, element, attrs) {\n            var isDragHandleUsed = false,\n                dragHandleClass,\n                draggingClass = attrs.draggingClass || 'on-dragging',\n                dragTarget;\n\n            element.attr('draggable', false);\n\n            scope.$watch(attrs.uiDraggable, function(newValue) {\n                if (newValue) {\n                    element.attr('draggable', newValue);\n                    element.bind('dragend', dragendHandler);\n                    element.bind('dragstart', dragstartHandler);\n                }\n                else {\n                    element.removeAttr('draggable');\n                    element.unbind('dragend', dragendHandler);\n                    element.unbind('dragstart', dragstartHandler);\n                }\n\n            });\n\n            if (angular.isString(attrs.dragHandleClass)) {\n                isDragHandleUsed = true;\n                dragHandleClass = attrs.dragHandleClass.trim() || 'drag-handle';\n\n                element.bind('mousedown', function(e) {\n                    dragTarget = e.target;\n                });\n            }\n\n            function dragendHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                setTimeout(function() {\n                    element.unbind('$destroy', dragendHandler);\n                }, 0);\n                var sendChannel = attrs.dragChannel || 'defaultchannel';\n                $rootScope.$broadcast('ANGULAR_DRAG_END', e, sendChannel);\n\n                determineEffectAllowed(e);\n\n                if (e.dataTransfer && e.dataTransfer.dropEffect !== 'none') {\n                    if (attrs.onDropSuccess) {\n                        var onDropSuccessFn = $parse(attrs.onDropSuccess);\n                        scope.$evalAsync(function() {\n                            onDropSuccessFn(scope, {$event: e});\n                        });\n                    }\n                }else if (e.dataTransfer && e.dataTransfer.dropEffect === 'none'){\n                    if (attrs.onDropFailure) {\n                        var onDropFailureFn = $parse(attrs.onDropFailure);\n                        scope.$evalAsync(function() {\n                            onDropFailureFn(scope, {$event: e});\n                        });\n                    }\n                }\n                element.removeClass(draggingClass);\n            }\n\n            function setDragElement(e, dragImageElementId) {\n                var dragImageElementFn;\n\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                dragImageElementFn = $parse(dragImageElementId);\n\n                scope.$apply(function() {\n                    var elementId = dragImageElementFn(scope, {$event: e}),\n                        dragElement;\n\n                    if (!(elementId && angular.isString(elementId))) {\n                        return;\n                    }\n\n                    dragElement = document.getElementById(elementId);\n\n                    if (!dragElement) {\n                        return;\n                    }\n\n                    e.dataTransfer.setDragImage(dragElement, 0, 0);\n                });\n            }\n\n            function dragstartHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                var isDragAllowed = !isDragHandleUsed || dragTarget.classList.contains(dragHandleClass);\n\n                if (isDragAllowed) {\n                    var sendChannel = attrs.dragChannel || 'defaultchannel';\n                    var dragData = '';\n                    if (attrs.drag) {\n                        dragData = scope.$eval(attrs.drag);\n                    }\n\n                    var dragImage = attrs.dragImage || null;\n\n                    element.addClass(draggingClass);\n                    element.bind('$destroy', dragendHandler);\n\n                    //Code to make sure that the setDragImage is available. IE 10, 11, and Opera do not support setDragImage.\n                    var hasNativeDraggable = !(document.uniqueID || window.opera);\n\n                    //If there is a draggable image passed in, then set the image to be dragged.\n                    if (dragImage && hasNativeDraggable) {\n                        var dragImageFn = $parse(attrs.dragImage);\n                        scope.$apply(function() {\n                            var dragImageParameters = dragImageFn(scope, {$event: e});\n                            if (dragImageParameters) {\n                                if (angular.isString(dragImageParameters)) {\n                                    dragImageParameters = $dragImage.generate(dragImageParameters);\n                                }\n                                if (dragImageParameters.image) {\n                                    var xOffset = dragImageParameters.xOffset || 0,\n                                        yOffset = dragImageParameters.yOffset || 0;\n                                    e.dataTransfer.setDragImage(dragImageParameters.image, xOffset, yOffset);\n                                }\n                            }\n                        });\n                    } else if (attrs.dragImageElementId) {\n                        setDragElement(e, attrs.dragImageElementId);\n                    }\n\n                    var offset = {x: e.offsetX, y: e.offsetY};\n                    var transferDataObject = {data: dragData, channel: sendChannel, offset: offset};\n                    var transferDataText = angular.toJson(transferDataObject);\n\n                    e.dataTransfer.setData('text', transferDataText);\n                    e.dataTransfer.effectAllowed = 'copyMove';\n\n                    $rootScope.$broadcast('ANGULAR_DRAG_START', e, sendChannel, transferDataObject);\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n    }\n    ]);\n\n    module.directive('uiOnDrop', ['$parse', '$rootScope', function($parse, $rootScope) {\n        return function(scope, element, attr) {\n            var dragging = 0; //Ref. http://stackoverflow.com/a/10906204\n            var dropChannel = attr.dropChannel || 'defaultchannel';\n            var dragChannel = '';\n            var dragEnterClass = attr.dragEnterClass || 'on-drag-enter';\n            var dragHoverClass = attr.dragHoverClass || 'on-drag-hover';\n            var customDragEnterEvent = $parse(attr.onDragEnter);\n            var customDragLeaveEvent = $parse(attr.onDragLeave);\n\n            function calculateDropOffset(e) {\n                var offset = {\n                    x: e.offsetX,\n                    y: e.offsetY\n                };\n                var target = e.target;\n\n                while (target !== element[0]) {\n                    offset.x = offset.x + target.offsetLeft;\n                    offset.y = offset.y + target.offsetTop;\n\n                    target = target.offsetParent;\n                    if (!target) {\n                        return null;\n                    }\n                }\n\n                return offset;\n            }\n\n            function onDragOver(e) {\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                var uiOnDragOverFn = $parse(attr.uiOnDragOver);\n                scope.$evalAsync(function() {\n                    uiOnDragOverFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                return false;\n            }\n\n            function onDragLeave(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                dragging--;\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragLeaveEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.addClass(dragEnterClass);\n                    element.removeClass(dragHoverClass);\n                }\n\n                var uiOnDragLeaveFn = $parse(attr.uiOnDragLeave);\n                scope.$evalAsync(function() {\n                    uiOnDragLeaveFn(scope, {$event: e, $channel: dropChannel});\n                });\n            }\n\n            function onDragEnter(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragEnterEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.removeClass(dragEnterClass);\n                    element.addClass(dragHoverClass);\n                }\n                dragging++;\n\n                var uiOnDragEnterFn = $parse(attr.uiOnDragEnter);\n                scope.$evalAsync(function() {\n                    uiOnDragEnterFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                $rootScope.$broadcast('ANGULAR_HOVER', dragChannel);\n            }\n\n            function onDrop(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation(); // Necessary. Allows us to drop.\n                }\n\n                var sendData = e.dataTransfer.getData('text');\n                sendData = angular.fromJson(sendData);\n\n                var dropOffset = calculateDropOffset(e);\n                \n                var position = dropOffset ? {\n                    x: dropOffset.x - sendData.offset.x,\n                    y: dropOffset.y - sendData.offset.y\n                } : null;\n                \n                determineEffectAllowed(e);\n\n                var uiOnDropFn = $parse(attr.uiOnDrop);\n                scope.$evalAsync(function() {\n                    uiOnDropFn(scope, {$data: sendData.data, $event: e, $channel: sendData.channel, $position: position});\n                });\n                element.removeClass(dragEnterClass);\n                dragging = 0;\n            }\n            \n            function isDragChannelAccepted(dragChannel, dropChannel) {\n                if (dropChannel === '*') {\n                    return true;\n                }\n\n                var channelMatchPattern = new RegExp('(\\\\s|[,])+(' + dragChannel + ')(\\\\s|[,])+', 'i');\n\n                return channelMatchPattern.test(',' + dropChannel + ',');\n            }\n\n            function preventNativeDnD(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                e.dataTransfer.dropEffect = 'none';\n                return false;\n            }\n\n            var deregisterDragStart = $rootScope.$on('ANGULAR_DRAG_START', function(_, e, channel, transferDataObject) {\n                dragChannel = channel;\n\n                var valid = true;\n\n                if (!isDragChannelAccepted(channel, dropChannel)) {\n                    valid = false;\n                }\n\n                if (valid && attr.dropValidate) {\n                    var validateFn = $parse(attr.dropValidate);\n                    valid = validateFn(scope, {\n                        $drop: {scope: scope, element: element},\n                        $event: e,\n                        $data: transferDataObject.data,\n                        $channel: transferDataObject.channel\n                    });\n                }\n\n                if (valid) {\n                    element.bind('dragover', onDragOver);\n                    element.bind('dragenter', onDragEnter);\n                    element.bind('dragleave', onDragLeave);\n                    element.bind('drop', onDrop);\n\n                    element.addClass(dragEnterClass);\n                } else {\n                    element.bind('dragover', preventNativeDnD);\n                    element.bind('dragenter', preventNativeDnD);\n                    element.bind('dragleave', preventNativeDnD);\n                    element.bind('drop', preventNativeDnD);\n\n                    element.removeClass(dragEnterClass);\n                }\n\n            });\n\n\n            var deregisterDragEnd = $rootScope.$on('ANGULAR_DRAG_END', function() {\n                element.unbind('dragover', onDragOver);\n                element.unbind('dragenter', onDragEnter);\n                element.unbind('dragleave', onDragLeave);\n\n                element.unbind('drop', onDrop);\n                element.removeClass(dragHoverClass);\n                element.removeClass(dragEnterClass);\n\n                element.unbind('dragover', preventNativeDnD);\n                element.unbind('dragenter', preventNativeDnD);\n                element.unbind('dragleave', preventNativeDnD);\n                element.unbind('drop', preventNativeDnD);\n            });\n\n            scope.$on('$destroy', function() {\n                deregisterDragStart();\n                deregisterDragEnd();\n            });\n\n\n            attr.$observe('dropChannel', function(value) {\n                if (value) {\n                    dropChannel = value;\n                }\n            });\n\n\n        };\n    }\n    ]);\n\n    module.constant('$dragImageConfig', {\n        height: 20,\n        width: 200,\n        padding: 10,\n        font: 'bold 11px Arial',\n        fontColor: '#eee8d5',\n        backgroundColor: '#93a1a1',\n        xOffset: 0,\n        yOffset: 0\n    });\n\n    module.service('$dragImage', ['$dragImageConfig', function(defaultConfig) {\n        var ELLIPSIS = '…';\n\n        function fitString(canvas, text, config) {\n            var width = canvas.measureText(text).width;\n            if (width < config.width) {\n                return text;\n            }\n            while (width + config.padding > config.width) {\n                text = text.substring(0, text.length - 1);\n                width = canvas.measureText(text + ELLIPSIS).width;\n            }\n            return text + ELLIPSIS;\n        }\n\n        this.generate = function(text, options) {\n            var config = angular.extend({}, defaultConfig, options || {});\n            var el = document.createElement('canvas');\n\n            el.height = config.height;\n            el.width = config.width;\n\n            var canvas = el.getContext('2d');\n\n            canvas.fillStyle = config.backgroundColor;\n            canvas.fillRect(0, 0, config.width, config.height);\n            canvas.font = config.font;\n            canvas.fillStyle = config.fontColor;\n\n            var title = fitString(canvas, text, config);\n            canvas.fillText(title, 4, config.padding + 4);\n\n            var image = new Image();\n            image.src = el.toDataURL();\n\n            return {\n                image: image,\n                xOffset: config.xOffset,\n                yOffset: config.yOffset\n            };\n        };\n    }\n    ]);\n\n}(angular));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-native-dragdrop/draganddrop.js\n// module id = 8\n// module chunks = 0","require('./draganddrop');\nmodule.exports = 'ang-drag-drop';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-native-dragdrop/index.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nimport './timePlannerContainer/timePlannerContainerDirective';\nimport './timePlannerRow/timePlannerRowDirective';\nimport './timePlannerCell/timePlannerCellDirective';\nimport './timeSegment/timeSegmentService';\nimport './timetable/timetableService';\nimport './currentTimeMarker/currentTimeMarkerDirective';\n\nimport '../styles/angular-time-planner.scss';\n\nangular\n  .module('angularTimePlanner', ['timePlannerContainerDirective', 'timePlannerRowDirective', 'timePlannerCellDirective'])\n  .constant('LOCALES', {\n    DEFAULT: 'en-us',\n    AVAILABLE: ['en-us']\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-time-planner.js","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deepmerge/dist/cjs.js\n// module id = 11\n// module chunks = 0","module.exports = \"<div class=atp-segment-item-wrapper><div class=atp-segment-item ng-repeat=\\\"item in segment.items\\\" ng-class=\\\"[item.segmentType, {'highlighted': (item.id === highlightedItem.id)}]\\\" ng-mouseenter=onHoverEvent(item) ng-mouseleave=onHoverEvent() ng-click=onClickEvent(item)></div></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerCell/timePlannerCellTemplate.html\n// module id = 12\n// module chunks = 0","module.exports = \"<div class=atp-container><div class=atp-head><div class=atp-row><div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{locale.labels.rowTitle}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable><span class=atpc-label>{{locale.labels.timetableTitle}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=!options.disableCounter><span class=atpc-label>{{locale.labels.counterTitle.hours}}</span></div><div class=\\\"atp-cell atpr-critical-items\\\"></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                      'month-day-segment': options.timeScope === 'month',\\n                      'days-{{segments.length}}': options.timeScope === 'month',\\n                      'range-day-segment': options.timeScope === 'range',\\n                      'hour-segment': options.timeScope === 'day'}\\\"><span class=atpc-label>{{segment.name}}</span></div></div></div><div class=atp-items-wrapper><div class=atp-row ng-repeat=\\\"row in rows\\\" drop-channel=\\\"{{options.editable && row.editable && options.dropChannel}}\\\" ui-on-drop=\\\"onDropEvent($data, row.id)\\\" time-planner-row></div><current-time-marker class=atp-current-time-marker ng-if=!options.disableCurrentTimeMarker /></div></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerContainer/timePlannerContainerTemplate.html\n// module id = 13\n// module chunks = 0","module.exports = \"<div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{row.title}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable ng-class=row.timetablesClasses><span class=atpc-label title=\\\"{{row.timetablesNames.join(', ')}}\\\">{{row.timetablesNames.join(', ')}}</span></div><div class=\\\"atp-cell atpr-critical-items\\\" ng-click=showCriticalItems(row.criticalItems) ng-class=\\\"{'active': row.criticalItems.length > 0}\\\"></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=!options.disableCounter><span class=atpc-label>{{row.hours || 0}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in row.segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                'hour-segment': options.timeScope === 'day',\\n                'month-day-segment': options.timeScope === 'month',\\n                'days-{{row.segments.length}}': options.timeScope === 'month',\\n                'range-day-segment': options.timeScope === 'range',\\n                'unavailable-segment': segment.disabled}\\\" time-planner-cell></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerRow/timePlannerRowTemplate.html\n// module id = 14\n// module chunks = 0","var map = {\n\t\"./time-planner-locale_en-us\": 0,\n\t\"./time-planner-locale_en-us.js\": 0\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerLocales ^\\.\\/time\\-planner\\-locale_.*$\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}