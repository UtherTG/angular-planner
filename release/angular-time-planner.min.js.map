{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-time-planner.min.js","webpack:///webpack/bootstrap c6b1719156867aa9ff35","webpack:///./src/timePlannerLocales/time-planner-locale_en-us.js","webpack:///./src/currentTimeMarker/currentTimeMarkerDirective.js","webpack:///./src/timePlannerCell/timePlannerCellDirective.js","webpack:///./src/timePlannerContainer/timePlannerContainerDirective.js","webpack:///./src/timePlannerRow/timePlannerRowDirective.js","webpack:///./src/timeSegment/timeSegmentService.js","webpack:///./src/timetable/timetableService.js","webpack:///./~/angular-native-dragdrop/draganddrop.js","webpack:///./~/angular-native-dragdrop/index.js","webpack:///./src/angular-time-planner.js","webpack:///./~/deepmerge/dist/cjs.js","webpack:///./src/timePlannerCell/timePlannerCellTemplate.html","webpack:///./src/timePlannerContainer/timePlannerContainerTemplate.html","webpack:///./src/timePlannerRow/timePlannerRowTemplate.html","webpack:///./src/timePlannerLocales ^\\.\\/time\\-planner\\-locale_.*$"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","labels","rowTitle","counterTitle","days","hours","timetableTitle","angular","directive","$interval","restrict","link","scope","element","_setStartPosition","segment","parent","initialOffset","document","querySelector","offsetLeft","parentWidth","offsetWidth","segmentsWidth","css","left","_updatePosition","offset","_calculateOffset","opacity","options","timeScope","_calculateOffsetForDay","_calculateOffsetForWeek","now","Date","hour","getHours","quarter","Math","floor","getMinutes","day","getDay","interval","$watch","on","cancel","template","_timePlannerCellTemplate","_timePlannerCellTemplate2","obj","default","$rootScope","controller","$scope","onHoverEvent","item","$parent","highlightedItem","onClickEvent","$broadcast","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","arr2","length","from","_timePlannerContainerTemplate","_timePlannerContainerTemplate2","_deepmerge","_deepmerge2","$locale","LOCALES","rows","TimeSegment","_init","_defaultOptions","locale","_localeId","segments","_getSegments","_getHours","_getWeekDays","push","segmentType","disableTimetable","defaultWeek","DATETIME_FORMATS","SHORTDAY","alteredWeek","splice","firstDay","preparedWeek","forEach","AVAILABLE","includes","id","DEFAULT","disableCounter","editable","dropChannel","$watchCollection","onDropEvent","rowId","_extends","assign","target","arguments","source","key","_timePlannerRowTemplate","_timePlannerRowTemplate2","Timetable","_prepareItems","row","index","timeSegment","range","_methods","setRange","timetable","toggleDisabled","validate","items","fillSegments","_setRangeForDay","rangeFrom","rangeTo","to","firstDate","getDate","setDate","_setRangeForHour","setHours","_fillSegmentsForWeek","schedule","scheduledStart","scheduled_start","scheduledEnd","scheduled_end","itemLength","firstDayNumber","_setBoundaries","ceil","abs","getTime","disabled","addItem","_fillSegmentsForDay","firstHour","overlap","week","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","params","concat","itemForRemove","filter","boolean","start","Number","end","breakStart","breakEnd","weekAvailability","startDate","endDate","weekDay","startHour","endHour","determineEffectAllowed","e","originalEvent","dataTransfer","dropEffect","effectAllowed","ctrlKey","createElement","$parse","$dragImage","attrs","dragendHandler","setTimeout","unbind","sendChannel","dragChannel","onDropSuccess","onDropSuccessFn","$evalAsync","$event","onDropFailure","onDropFailureFn","removeClass","draggingClass","setDragElement","dragImageElementId","dragImageElementFn","$apply","dragElement","elementId","isString","getElementById","setDragImage","dragstartHandler","isDragHandleUsed","dragTarget","classList","contains","dragHandleClass","dragData","drag","$eval","dragImage","addClass","bind","hasNativeDraggable","uniqueID","window","opera","dragImageFn","dragImageParameters","generate","image","xOffset","yOffset","x","offsetX","y","offsetY","transferDataObject","data","channel","transferDataText","toJson","setData","preventDefault","attr","uiDraggable","newValue","removeAttr","trim","calculateDropOffset","offsetTop","offsetParent","onDragOver","stopPropagation","uiOnDragOverFn","uiOnDragOver","$channel","onDragLeave","dragging","customDragLeaveEvent","dragEnterClass","dragHoverClass","uiOnDragLeaveFn","uiOnDragLeave","onDragEnter","customDragEnterEvent","uiOnDragEnterFn","uiOnDragEnter","onDrop","sendData","getData","fromJson","dropOffset","position","uiOnDropFn","uiOnDrop","$data","$position","isDragChannelAccepted","RegExp","test","preventNativeDnD","deregisterDragStart","$on","_","valid","dropValidate","$drop","deregisterDragEnd","$observe","constant","height","width","padding","font","fontColor","backgroundColor","service","defaultConfig","fitString","canvas","text","config","measureText","substring","ELLIPSIS","extend","el","getContext","fillStyle","fillRect","title","fillText","Image","src","toDataURL","isNonNullObject","isSpecial","stringValue","toString","isReactElement","$$typeof","REACT_ELEMENT_TYPE","emptyTarget","val","cloneIfNecessary","optionsArgument","clone","isMergeableObject","deepmerge","defaultArrayMerge","destination","slice","indexOf","mergeObject","keys","sourceIsArray","targetIsArray","arrayMerge","canUseSymbol","Symbol","for","all","array","Error","reduce","prev","next","deepmerge_1","webpackContext","req","webpackContextResolve","map","./time-planner-locale_en-us","./time-planner-locale_en-us.js","resolve"],"mappings":"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","file":"angular-time-planner.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularTimePlanner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularTimePlanner\"] = factory();\n\telse\n\t\troot[\"angularTimePlanner\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angularTimePlanner\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angularTimePlanner\"] = factory();\n\telse\n\t\troot[\"angularTimePlanner\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 10);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {\n  labels: {\n    rowTitle: 'Tasks',\n    counterTitle: {\n      days: 'Days',\n      hours: 'Hours'\n    },\n    timetableTitle: 'Timetable'\n  }\n};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nangular.module('currentTimeMarkerDirective', []).directive('currentTimeMarker', ['$interval', function ($interval) {\n  var link = function link(scope, element) {\n    var interval = void 0,\n        initialOffset = void 0,\n        parentWidth = void 0,\n        segmentsWidth = void 0;\n\n    angular.element(_setStartPosition);\n    scope.$watch('options.timeScope', _updatePosition);\n\n    function _setStartPosition() {\n      var segment = void 0,\n          parent = void 0;\n\n      initialOffset = (segment = document.querySelector('.atp-items-wrapper .atp-segment')) ? segment.offsetLeft : 0;\n      parentWidth = (parent = document.querySelector('.atp-items-wrapper')) ? parent.offsetWidth : 0;\n\n      segmentsWidth = parentWidth - initialOffset;\n      element.css({ left: initialOffset + 'px' });\n      _updatePosition();\n    }\n\n    function _updatePosition() {\n      var offset = initialOffset + _calculateOffset();\n      element.css({\n        left: offset + 'px',\n        opacity: offset ? 1 : 0\n      });\n    }\n\n    function _calculateOffset() {\n      switch (scope.options.timeScope) {\n        case 'day':\n          return _calculateOffsetForDay();\n        case 'week':\n          return _calculateOffsetForWeek();\n        case 'range':\n          return 0;\n      }\n    }\n\n    function _calculateOffsetForDay() {\n      var now = new Date(),\n          hour = now.getHours(),\n          quarter = Math.floor(now.getMinutes() / 15);\n      return segmentsWidth / 24 * (hour + 0.25 * (quarter > 0 ? quarter : 0));\n    }\n\n    function _calculateOffsetForWeek() {\n      var now = new Date(),\n          day = now.getDay(),\n          quarter = Math.floor(now.getHours() / 6);\n      return segmentsWidth / 7 * (day + 0.25 * (quarter > 0 ? quarter : 0));\n    }\n\n    // Live update\n    interval = $interval(function () {\n      _updatePosition();\n    }, 60000);\n    element.on('$destroy', function () {\n      $interval.cancel(interval);\n    });\n  };\n\n  return {\n    restrict: 'E',\n    link: link,\n    template: '<div></div>'\n  };\n}]);\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerCellTemplate = __webpack_require__(12);\n\nvar _timePlannerCellTemplate2 = _interopRequireDefault(_timePlannerCellTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('timePlannerCellDirective', []).directive('timePlannerCell', ['$rootScope', function ($rootScope) {\n  var controller = ['$scope', function ($scope) {\n    // Scope functions\n    $scope.onHoverEvent = function (item) {\n      $scope.$parent.highlightedItem = item;\n    };\n    $scope.onClickEvent = function (item) {\n      return $rootScope.$broadcast('ATP_SEGMENT_ON_CLICK', item);\n    };\n  }];\n\n  return {\n    restrict: 'A',\n    template: _timePlannerCellTemplate2.default,\n    controller: controller\n  };\n}]);\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _timePlannerContainerTemplate = __webpack_require__(13);\n\nvar _timePlannerContainerTemplate2 = _interopRequireDefault(_timePlannerContainerTemplate);\n\nvar _deepmerge = __webpack_require__(11);\n\nvar _deepmerge2 = _interopRequireDefault(_deepmerge);\n\n__webpack_require__(9);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nangular.module('timePlannerContainerDirective', ['ang-drag-drop', 'timeSegment', 'currentTimeMarkerDirective']).directive('timePlannerContainer', ['$rootScope', '$locale', 'LOCALES', function ($rootScope, $locale, LOCALES) {\n  var controller = ['$scope', 'TimeSegment', function ($scope, TimeSegment) {\n    var _localeId = LOCALES.AVAILABLE.includes($locale.id) ? $locale.id : LOCALES.DEFAULT,\n        _defaultOptions = {\n      timeScope: 'week',\n      disableCounter: true,\n      editable: false,\n      dropChannel: 'atp-row'\n    };\n\n    $scope.$watchCollection('options', _init);\n\n    // Scope functions\n    $scope.onDropEvent = function (item, rowId) {\n      return $rootScope.$broadcast('ATP_ITEM_ON_DROP', { id: rowId, item: item });\n    };\n\n    function _init() {\n      // I use private variables since we're not changing options from inside and it's easier to watch and merge scope\n\n      // merge defaults with user options\n      $scope.options = (0, _deepmerge2.default)(_defaultOptions, $scope.options);\n      // we use an object with merged default locale and scope override(if any)\n      $scope.locale = (0, _deepmerge2.default)(__webpack_require__(15)(\"./time-planner-locale_\" + _localeId), $scope.options.locale || {});\n      // fill segments for current options\n      $scope.segments = _getSegments();\n    }\n\n    // Get segments for planner, hours, week, dates range. Default is a week.\n    function _getSegments() {\n      switch ($scope.options.timeScope) {\n        case 'day':\n          return _getHours();\n          break;\n        case 'range':\n          // reserved for future use\n          break;\n        case 'week':\n        default:\n          return _getWeekDays();\n      }\n    }\n\n    // Method to generate hours labels\n    function _getHours() {\n      var hours = [];\n\n      for (var i = 0; i < 24; i++) {\n        hours.push(new TimeSegment({\n          name: i,\n          segmentType: 'hour',\n          disableTimetable: true\n        }));\n      }\n\n      return hours;\n    }\n\n    // Method to generate week days labels\n    // I use only days from locales. First day of the week is the same as Date() (0 - Sun)\n    function _getWeekDays() {\n      var defaultWeek = [].concat(_toConsumableArray($locale.DATETIME_FORMATS.SHORTDAY)),\n          alteredWeek = defaultWeek.splice($scope.options.firstDay || 0, defaultWeek.length),\n          preparedWeek = [].concat(_toConsumableArray(alteredWeek), _toConsumableArray(defaultWeek)),\n          segments = [];\n\n      preparedWeek.forEach(function (day) {\n        segments.push(new TimeSegment({\n          name: day,\n          segmentType: 'week-day',\n          disableTimetable: true\n        }));\n      });\n\n      return segments;\n    }\n  }];\n\n  return {\n    restrict: 'E',\n    scope: {\n      options: '=',\n      rows: '='\n    },\n    controller: controller,\n    template: _timePlannerContainerTemplate2.default\n  };\n}]);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _timePlannerRowTemplate = __webpack_require__(14);\n\nvar _timePlannerRowTemplate2 = _interopRequireDefault(_timePlannerRowTemplate);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nangular.module('timePlannerRowDirective', ['timeSegment', 'timetable']).directive('timePlannerRow', function () {\n  var controller = ['$scope', 'TimeSegment', 'Timetable', function ($scope, TimeSegment, Timetable) {\n    var _methods = {\n      week: {\n        fillSegments: _fillSegmentsForWeek,\n        setRange: _setRangeForDay\n      },\n      day: {\n        fillSegments: _fillSegmentsForDay,\n        setRange: _setRangeForHour\n      }\n    };\n\n    // INIT\n    $scope.$watchCollection('options', _prepareItems);\n\n    // Generate segments for each row\n    function _prepareItems() {\n      $scope.row.segments = [];\n      $scope.row.hours = 0;\n      $scope.$parent.segments.forEach(function (segment, index) {\n        var timeSegment = new TimeSegment(_extends({}, segment, {\n          range: _methods[$scope.options.timeScope].setRange(index)\n        }));\n\n        if (!$scope.row.disableTimetable) {\n          timeSegment.timetable = $scope.row.timetable && new Timetable($scope.row.timetable);\n          timeSegment.toggleDisabled(!timeSegment.timetable || !timeSegment.timetable.validate(timeSegment.range));\n        }\n\n        $scope.row.segments.push(timeSegment);\n      });\n      $scope.row.items.forEach(_methods[$scope.options.timeScope].fillSegments);\n    }\n\n    function _setRangeForDay(index) {\n      var rangeFrom = new Date($scope.options.from),\n          rangeTo = new Date($scope.options.to),\n          firstDate = rangeFrom.getDate();\n\n      rangeFrom = rangeFrom.setDate(firstDate + index);\n      rangeTo = rangeTo.setDate(firstDate + index);\n      return [rangeFrom, rangeTo];\n    }\n\n    function _setRangeForHour(index) {\n      var rangeFrom = new Date($scope.$parent.options.from),\n          rangeTo = new Date($scope.$parent.options.to);\n\n      rangeFrom = rangeFrom.setHours(index);\n      rangeTo = rangeTo.setHours(index);\n      return [rangeFrom, rangeTo];\n    }\n\n    // Fill each segment with items. This method is solely for week time scope\n    function _fillSegmentsForWeek(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength = void 0,\n          firstDayNumber = void 0;\n\n      schedule.scheduledStart.setHours(0, 0, 0, 0);\n      schedule.scheduledEnd.setHours(23, 59, 59, 999);\n\n      schedule = _setBoundaries(schedule);\n      firstDayNumber = schedule.scheduledStart.getDay();\n\n      itemLength = Math.ceil(Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay));\n\n      if (!$scope.options.disableCounter) {\n        $scope.row.hours += itemLength * 8;\n      }\n\n      for (var i = 0; i < itemLength; i++) {\n        !$scope.row.segments[firstDayNumber + i].disabled && $scope.row.segments[firstDayNumber + i].addItem(item);\n      }\n    }\n\n    // Fill each segment with items. This method is solely for day time scope\n    function _fillSegmentsForDay(item) {\n      var schedule = {\n        scheduledStart: new Date(item.scheduled_start),\n        scheduledEnd: new Date(item.scheduled_end)\n      },\n          itemLength = void 0,\n          firstHour = void 0,\n          overlap = void 0;\n\n      schedule = _setBoundaries(schedule);\n      firstHour = schedule.scheduledStart.getHours();\n      overlap = schedule.scheduledStart.getHours() > schedule.scheduledEnd.getHours();\n      itemLength = (overlap ? 24 : schedule.scheduledEnd.getHours()) - schedule.scheduledStart.getHours();\n      itemLength += schedule.scheduledEnd.getMinutes() === 0 ? 0 : 1; // if it ends with 00 - we don't count that hour\n\n      if (!$scope.options.disableCounter) {\n        $scope.row.hours += itemLength;\n      }\n\n      for (var i = 0; i < itemLength; i++) {\n        !$scope.row.segments[firstHour + i].disabled && $scope.row.segments[firstHour + i].addItem(item);\n      }\n    }\n\n    // Set boundaries for item inside the planner\n    function _setBoundaries(schedule) {\n      schedule.scheduledStart = schedule.scheduledStart < $scope.$parent.options.from ? $scope.$parent.options.from : schedule.scheduledStart;\n\n      schedule.scheduledEnd = schedule.scheduledEnd > $scope.$parent.options.to ? $scope.$parent.options.to : schedule.scheduledEnd;\n\n      return schedule;\n    }\n  }];\n\n  return {\n    restrict: 'A',\n    template: _timePlannerRowTemplate2.default,\n    controller: controller\n  };\n});\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nangular.module('timeSegment', []).factory('TimeSegment', [function () {\n  var TimeSegment = function () {\n    function TimeSegment(params) {\n      _classCallCheck(this, TimeSegment);\n\n      this.name = params.name;\n      this.segmentType = params.segmentType;\n      this.items = params.items || [];\n      this.range = params.range || [];\n      this.disabled = params.disabled || false;\n    }\n\n    _createClass(TimeSegment, [{\n      key: 'addItem',\n      value: function addItem(item) {\n        this.items = [].concat(_toConsumableArray(this.items), [item]);\n      }\n    }, {\n      key: 'removeItem',\n      value: function removeItem(itemForRemove) {\n        this.items = this.items.filter(function (item) {\n          return item.id !== itemForRemove.id;\n        });\n      }\n    }, {\n      key: 'toggleDisabled',\n      value: function toggleDisabled(boolean) {\n        this.disabled = typeof boolean === 'undefined' ? !this.disabled : boolean;\n      }\n    }]);\n\n    return TimeSegment;\n  }();\n\n  return TimeSegment;\n}]);\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nangular.module('timetable', []).factory('Timetable', [function () {\n  var Timetable = function () {\n    function Timetable(params) {\n      _classCallCheck(this, Timetable);\n\n      this.start = [Number(params.start[0]), Number(params.start[1])];\n      this.end = [Number(params.end[0]), Number(params.end[1])];\n      this.breakStart = params.breakStart;\n      this.breakEnd = params.breakEnd;\n      this.weekAvailability = params.weekAvailability;\n    }\n\n    _createClass(Timetable, [{\n      key: 'validate',\n      value: function validate(range) {\n        var startDate = new Date(range[0]),\n            endDate = new Date(range[1]),\n            weekDay = startDate.getDay(),\n            startHour = startDate.getHours(),\n            endHour = endDate.getHours(),\n            overlap = this.start[0] > this.end[0];\n\n        if (startHour === endHour) {\n          // if it's an hour, we need to validate hours and day\n          return this.weekAvailability[weekDay] && (overlap ? startHour >= this.start[0] && endHour < 24 || startHour >= 0 && endHour < this.end[0] : startHour >= this.start[0] && endHour < this.end[0]);\n        } else {\n          // if it's a day, we need to validate only day\n          return this.weekAvailability[weekDay];\n        }\n      }\n    }]);\n\n    return Timetable;\n  }();\n\n  return Timetable;\n}]);\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports) {\n\n(function(angular) {\n    'use strict';\n\n    function isDnDsSupported() {\n        return 'ondrag' in document.createElement('a');\n    }\n\n    function determineEffectAllowed(e) {\n        if(e.originalEvent) {\n          e.dataTransfer = e.originalEvent.dataTransfer;\n        }\n\n        // Chrome doesn't set dropEffect, so we have to work it out ourselves\n        if (typeof e.dataTransfer !== 'undefined' && e.dataTransfer.dropEffect === 'none') {\n            if (e.dataTransfer.effectAllowed === 'copy' ||\n                e.dataTransfer.effectAllowed === 'move') {\n                e.dataTransfer.dropEffect = e.dataTransfer.effectAllowed;\n            } else if (e.dataTransfer.effectAllowed === 'copyMove' || e.dataTransfer.effectAllowed === 'copymove') {\n                e.dataTransfer.dropEffect = e.ctrlKey ? 'copy' : 'move';\n            }\n        }\n    }\n\n    if (!isDnDsSupported()) {\n        angular.module('ang-drag-drop', []);\n        return;\n    }\n\n    var module = angular.module('ang-drag-drop', []);\n\n    module.directive('uiDraggable', ['$parse', '$rootScope', '$dragImage', function($parse, $rootScope, $dragImage) {\n        return function(scope, element, attrs) {\n            var isDragHandleUsed = false,\n                dragHandleClass,\n                draggingClass = attrs.draggingClass || 'on-dragging',\n                dragTarget;\n\n            element.attr('draggable', false);\n\n            scope.$watch(attrs.uiDraggable, function(newValue) {\n                if (newValue) {\n                    element.attr('draggable', newValue);\n                    element.bind('dragend', dragendHandler);\n                    element.bind('dragstart', dragstartHandler);\n                }\n                else {\n                    element.removeAttr('draggable');\n                    element.unbind('dragend', dragendHandler);\n                    element.unbind('dragstart', dragstartHandler);\n                }\n\n            });\n\n            if (angular.isString(attrs.dragHandleClass)) {\n                isDragHandleUsed = true;\n                dragHandleClass = attrs.dragHandleClass.trim() || 'drag-handle';\n\n                element.bind('mousedown', function(e) {\n                    dragTarget = e.target;\n                });\n            }\n\n            function dragendHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                setTimeout(function() {\n                    element.unbind('$destroy', dragendHandler);\n                }, 0);\n                var sendChannel = attrs.dragChannel || 'defaultchannel';\n                $rootScope.$broadcast('ANGULAR_DRAG_END', e, sendChannel);\n\n                determineEffectAllowed(e);\n\n                if (e.dataTransfer && e.dataTransfer.dropEffect !== 'none') {\n                    if (attrs.onDropSuccess) {\n                        var onDropSuccessFn = $parse(attrs.onDropSuccess);\n                        scope.$evalAsync(function() {\n                            onDropSuccessFn(scope, {$event: e});\n                        });\n                    }\n                }else if (e.dataTransfer && e.dataTransfer.dropEffect === 'none'){\n                    if (attrs.onDropFailure) {\n                        var onDropFailureFn = $parse(attrs.onDropFailure);\n                        scope.$evalAsync(function() {\n                            onDropFailureFn(scope, {$event: e});\n                        });\n                    }\n                }\n                element.removeClass(draggingClass);\n            }\n\n            function setDragElement(e, dragImageElementId) {\n                var dragImageElementFn;\n\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                dragImageElementFn = $parse(dragImageElementId);\n\n                scope.$apply(function() {\n                    var elementId = dragImageElementFn(scope, {$event: e}),\n                        dragElement;\n\n                    if (!(elementId && angular.isString(elementId))) {\n                        return;\n                    }\n\n                    dragElement = document.getElementById(elementId);\n\n                    if (!dragElement) {\n                        return;\n                    }\n\n                    e.dataTransfer.setDragImage(dragElement, 0, 0);\n                });\n            }\n\n            function dragstartHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                var isDragAllowed = !isDragHandleUsed || dragTarget.classList.contains(dragHandleClass);\n\n                if (isDragAllowed) {\n                    var sendChannel = attrs.dragChannel || 'defaultchannel';\n                    var dragData = '';\n                    if (attrs.drag) {\n                        dragData = scope.$eval(attrs.drag);\n                    }\n\n                    var dragImage = attrs.dragImage || null;\n\n                    element.addClass(draggingClass);\n                    element.bind('$destroy', dragendHandler);\n\n                    //Code to make sure that the setDragImage is available. IE 10, 11, and Opera do not support setDragImage.\n                    var hasNativeDraggable = !(document.uniqueID || window.opera);\n\n                    //If there is a draggable image passed in, then set the image to be dragged.\n                    if (dragImage && hasNativeDraggable) {\n                        var dragImageFn = $parse(attrs.dragImage);\n                        scope.$apply(function() {\n                            var dragImageParameters = dragImageFn(scope, {$event: e});\n                            if (dragImageParameters) {\n                                if (angular.isString(dragImageParameters)) {\n                                    dragImageParameters = $dragImage.generate(dragImageParameters);\n                                }\n                                if (dragImageParameters.image) {\n                                    var xOffset = dragImageParameters.xOffset || 0,\n                                        yOffset = dragImageParameters.yOffset || 0;\n                                    e.dataTransfer.setDragImage(dragImageParameters.image, xOffset, yOffset);\n                                }\n                            }\n                        });\n                    } else if (attrs.dragImageElementId) {\n                        setDragElement(e, attrs.dragImageElementId);\n                    }\n\n                    var offset = {x: e.offsetX, y: e.offsetY};\n                    var transferDataObject = {data: dragData, channel: sendChannel, offset: offset};\n                    var transferDataText = angular.toJson(transferDataObject);\n\n                    e.dataTransfer.setData('text', transferDataText);\n                    e.dataTransfer.effectAllowed = 'copyMove';\n\n                    $rootScope.$broadcast('ANGULAR_DRAG_START', e, sendChannel, transferDataObject);\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n    }\n    ]);\n\n    module.directive('uiOnDrop', ['$parse', '$rootScope', function($parse, $rootScope) {\n        return function(scope, element, attr) {\n            var dragging = 0; //Ref. http://stackoverflow.com/a/10906204\n            var dropChannel = attr.dropChannel || 'defaultchannel';\n            var dragChannel = '';\n            var dragEnterClass = attr.dragEnterClass || 'on-drag-enter';\n            var dragHoverClass = attr.dragHoverClass || 'on-drag-hover';\n            var customDragEnterEvent = $parse(attr.onDragEnter);\n            var customDragLeaveEvent = $parse(attr.onDragLeave);\n\n            function calculateDropOffset(e) {\n                var offset = {\n                    x: e.offsetX,\n                    y: e.offsetY\n                };\n                var target = e.target;\n\n                while (target !== element[0]) {\n                    offset.x = offset.x + target.offsetLeft;\n                    offset.y = offset.y + target.offsetTop;\n\n                    target = target.offsetParent;\n                    if (!target) {\n                        return null;\n                    }\n                }\n\n                return offset;\n            }\n\n            function onDragOver(e) {\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                var uiOnDragOverFn = $parse(attr.uiOnDragOver);\n                scope.$evalAsync(function() {\n                    uiOnDragOverFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                return false;\n            }\n\n            function onDragLeave(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                dragging--;\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragLeaveEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.addClass(dragEnterClass);\n                    element.removeClass(dragHoverClass);\n                }\n\n                var uiOnDragLeaveFn = $parse(attr.uiOnDragLeave);\n                scope.$evalAsync(function() {\n                    uiOnDragLeaveFn(scope, {$event: e, $channel: dropChannel});\n                });\n            }\n\n            function onDragEnter(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragEnterEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.removeClass(dragEnterClass);\n                    element.addClass(dragHoverClass);\n                }\n                dragging++;\n\n                var uiOnDragEnterFn = $parse(attr.uiOnDragEnter);\n                scope.$evalAsync(function() {\n                    uiOnDragEnterFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                $rootScope.$broadcast('ANGULAR_HOVER', dragChannel);\n            }\n\n            function onDrop(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation(); // Necessary. Allows us to drop.\n                }\n\n                var sendData = e.dataTransfer.getData('text');\n                sendData = angular.fromJson(sendData);\n\n                var dropOffset = calculateDropOffset(e);\n                \n                var position = dropOffset ? {\n                    x: dropOffset.x - sendData.offset.x,\n                    y: dropOffset.y - sendData.offset.y\n                } : null;\n                \n                determineEffectAllowed(e);\n\n                var uiOnDropFn = $parse(attr.uiOnDrop);\n                scope.$evalAsync(function() {\n                    uiOnDropFn(scope, {$data: sendData.data, $event: e, $channel: sendData.channel, $position: position});\n                });\n                element.removeClass(dragEnterClass);\n                dragging = 0;\n            }\n            \n            function isDragChannelAccepted(dragChannel, dropChannel) {\n                if (dropChannel === '*') {\n                    return true;\n                }\n\n                var channelMatchPattern = new RegExp('(\\\\s|[,])+(' + dragChannel + ')(\\\\s|[,])+', 'i');\n\n                return channelMatchPattern.test(',' + dropChannel + ',');\n            }\n\n            function preventNativeDnD(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                e.dataTransfer.dropEffect = 'none';\n                return false;\n            }\n\n            var deregisterDragStart = $rootScope.$on('ANGULAR_DRAG_START', function(_, e, channel, transferDataObject) {\n                dragChannel = channel;\n\n                var valid = true;\n\n                if (!isDragChannelAccepted(channel, dropChannel)) {\n                    valid = false;\n                }\n\n                if (valid && attr.dropValidate) {\n                    var validateFn = $parse(attr.dropValidate);\n                    valid = validateFn(scope, {\n                        $drop: {scope: scope, element: element},\n                        $event: e,\n                        $data: transferDataObject.data,\n                        $channel: transferDataObject.channel\n                    });\n                }\n\n                if (valid) {\n                    element.bind('dragover', onDragOver);\n                    element.bind('dragenter', onDragEnter);\n                    element.bind('dragleave', onDragLeave);\n                    element.bind('drop', onDrop);\n\n                    element.addClass(dragEnterClass);\n                } else {\n                    element.bind('dragover', preventNativeDnD);\n                    element.bind('dragenter', preventNativeDnD);\n                    element.bind('dragleave', preventNativeDnD);\n                    element.bind('drop', preventNativeDnD);\n\n                    element.removeClass(dragEnterClass);\n                }\n\n            });\n\n\n            var deregisterDragEnd = $rootScope.$on('ANGULAR_DRAG_END', function() {\n                element.unbind('dragover', onDragOver);\n                element.unbind('dragenter', onDragEnter);\n                element.unbind('dragleave', onDragLeave);\n\n                element.unbind('drop', onDrop);\n                element.removeClass(dragHoverClass);\n                element.removeClass(dragEnterClass);\n\n                element.unbind('dragover', preventNativeDnD);\n                element.unbind('dragenter', preventNativeDnD);\n                element.unbind('dragleave', preventNativeDnD);\n                element.unbind('drop', preventNativeDnD);\n            });\n\n            scope.$on('$destroy', function() {\n                deregisterDragStart();\n                deregisterDragEnd();\n            });\n\n\n            attr.$observe('dropChannel', function(value) {\n                if (value) {\n                    dropChannel = value;\n                }\n            });\n\n\n        };\n    }\n    ]);\n\n    module.constant('$dragImageConfig', {\n        height: 20,\n        width: 200,\n        padding: 10,\n        font: 'bold 11px Arial',\n        fontColor: '#eee8d5',\n        backgroundColor: '#93a1a1',\n        xOffset: 0,\n        yOffset: 0\n    });\n\n    module.service('$dragImage', ['$dragImageConfig', function(defaultConfig) {\n        var ELLIPSIS = '…';\n\n        function fitString(canvas, text, config) {\n            var width = canvas.measureText(text).width;\n            if (width < config.width) {\n                return text;\n            }\n            while (width + config.padding > config.width) {\n                text = text.substring(0, text.length - 1);\n                width = canvas.measureText(text + ELLIPSIS).width;\n            }\n            return text + ELLIPSIS;\n        }\n\n        this.generate = function(text, options) {\n            var config = angular.extend({}, defaultConfig, options || {});\n            var el = document.createElement('canvas');\n\n            el.height = config.height;\n            el.width = config.width;\n\n            var canvas = el.getContext('2d');\n\n            canvas.fillStyle = config.backgroundColor;\n            canvas.fillRect(0, 0, config.width, config.height);\n            canvas.font = config.font;\n            canvas.fillStyle = config.fontColor;\n\n            var title = fitString(canvas, text, config);\n            canvas.fillText(title, 4, config.padding + 4);\n\n            var image = new Image();\n            image.src = el.toDataURL();\n\n            return {\n                image: image,\n                xOffset: config.xOffset,\n                yOffset: config.yOffset\n            };\n        };\n    }\n    ]);\n\n}(angular));\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(8);\nmodule.exports = 'ang-drag-drop';\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n__webpack_require__(3);\n\n__webpack_require__(4);\n\n__webpack_require__(2);\n\n__webpack_require__(5);\n\n__webpack_require__(6);\n\n__webpack_require__(1);\n\n__webpack_require__(7);\n\nangular.module('angularTimePlanner', ['timePlannerContainerDirective', 'timePlannerRowDirective', 'timePlannerCellDirective']).constant('LOCALES', {\n  DEFAULT: 'en-us',\n  AVAILABLE: ['en-us']\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=atp-segment-item-wrapper><div class=atp-segment-item ng-repeat=\\\"item in segment.items\\\" ng-class=\\\"[item.segmentType, {'highlighted': (item.id === highlightedItem.id)}]\\\" ng-mouseenter=onHoverEvent(item) ng-mouseleave=onHoverEvent() ng-click=onClickEvent(item)></div></div>\";\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=atp-container><div class=atp-head><div class=atp-row><div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{locale.labels.rowTitle}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable><span class=atpc-label>{{locale.labels.timetableTitle}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=!options.disableCounter><span class=atpc-label>{{locale.labels.counterTitle.hours}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                      'hour-segment': options.timeScope === 'day'}\\\"><span class=atpc-label>{{segment.name}}</span></div></div></div><div class=atp-items-wrapper><div class=atp-row ng-repeat=\\\"row in rows\\\" drop-channel=\\\"{{options.editable && row.editable && options.dropChannel}}\\\" ui-on-drop=\\\"onDropEvent($data, row.id)\\\" time-planner-row></div><current-time-marker class=atp-current-time-marker ng-if=!options.disableCurrentTimeMarker /></div></div>\";\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports) {\n\nmodule.exports = \"<div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{row.title}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable><span class=atpc-label>{{row.timetable.start ? row.timetable.start.join(':') + \\\" - \\\" + row.timetable.end.join(':') : 'N/A'}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=options.needCounter><span class=atpc-label>{{row.hours || 0}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in row.segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                'hour-segment': options.timeScope === 'day',\\n                'unavailable-segment': segment.disabled}\\\" time-planner-cell></div>\";\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar map = {\n\t\"./time-planner-locale_en-us\": 0,\n\t\"./time-planner-locale_en-us.js\": 0\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// angular-time-planner.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 10);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c6b1719156867aa9ff35","module.exports = {\n  labels: {\n    rowTitle: 'Tasks',\n    counterTitle: {\n      days: 'Days',\n      hours: 'Hours'\n    },\n    timetableTitle: 'Timetable'\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerLocales/time-planner-locale_en-us.js","angular\n  .module('currentTimeMarkerDirective', [])\n  .directive('currentTimeMarker', ['$interval', ($interval) => {\n    const link = (scope, element) => {\n      let interval, initialOffset, parentWidth, segmentsWidth;\n\n      angular.element(_setStartPosition);\n      scope.$watch('options.timeScope', _updatePosition);\n\n      function _setStartPosition() {\n        let segment, parent;\n\n        initialOffset = (segment = document.querySelector('.atp-items-wrapper .atp-segment')) ?\n          segment.offsetLeft : 0;\n        parentWidth = (parent = document.querySelector('.atp-items-wrapper')) ?\n          parent.offsetWidth : 0;\n\n        segmentsWidth = parentWidth - initialOffset;\n        element.css({left: `${initialOffset}px`});\n        _updatePosition();\n      }\n\n      function _updatePosition() {\n        const offset = initialOffset + _calculateOffset();\n        element.css({\n          left: `${offset}px`,\n          opacity: offset ? 1 : 0\n        });\n      }\n\n      function _calculateOffset() {\n        switch (scope.options.timeScope) {\n          case 'day': return _calculateOffsetForDay();\n          case 'week': return _calculateOffsetForWeek();\n          case 'range': return 0;\n        }\n      }\n\n      function _calculateOffsetForDay() {\n        const\n          now = new Date(),\n          hour = now.getHours(),\n          quarter = Math.floor(now.getMinutes() / 15);\n        return (segmentsWidth / 24) * (hour + 0.25 * (quarter > 0 ? quarter : 0));\n      }\n\n      function _calculateOffsetForWeek() {\n        const\n          now = new Date(),\n          day = now.getDay(),\n          quarter = Math.floor(now.getHours() / 6);\n        return (segmentsWidth / 7) * (day + 0.25 * (quarter > 0 ? quarter : 0));\n      }\n\n      // Live update\n      interval = $interval(function() {\n        _updatePosition();\n      }, 60000);\n      element.on('$destroy', function() {\n        $interval.cancel(interval);\n      });\n    };\n\n    return {\n      restrict: 'E',\n      link: link,\n      template: '<div></div>'\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/currentTimeMarker/currentTimeMarkerDirective.js","import template from './timePlannerCellTemplate.html';\n\nangular\n  .module('timePlannerCellDirective', [])\n  .directive('timePlannerCell', ['$rootScope', ($rootScope) => {\n    const controller = ['$scope', ($scope) => {\n      // Scope functions\n      $scope.onHoverEvent = (item) => { $scope.$parent.highlightedItem = item };\n      $scope.onClickEvent = (item) => $rootScope.$broadcast('ATP_SEGMENT_ON_CLICK', item);\n\n    }];\n\n    return {\n      restrict: 'A',\n      template: template,\n      controller: controller\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerCell/timePlannerCellDirective.js","import template from './timePlannerContainerTemplate.html';\nimport merge from 'deepmerge';\nimport 'angular-native-dragdrop';\n\n\nangular\n  .module('timePlannerContainerDirective', ['ang-drag-drop', 'timeSegment', 'currentTimeMarkerDirective'])\n  .directive('timePlannerContainer', ['$rootScope', '$locale', 'LOCALES', ($rootScope, $locale, LOCALES) => {\n    const controller = ['$scope', 'TimeSegment', ($scope, TimeSegment) => {\n      let\n        _localeId = LOCALES.AVAILABLE.includes($locale.id) ? $locale.id : LOCALES.DEFAULT,\n        _defaultOptions = {\n          timeScope: 'week',\n          disableCounter: true,\n          editable: false,\n          dropChannel: 'atp-row'\n        };\n\n      $scope.$watchCollection('options', _init);\n\n      // Scope functions\n      $scope.onDropEvent = (item, rowId) => $rootScope.$broadcast('ATP_ITEM_ON_DROP', {id: rowId, item: item});\n\n      function _init() {\n        // I use private variables since we're not changing options from inside and it's easier to watch and merge scope\n\n        // merge defaults with user options\n        $scope.options = merge(_defaultOptions, $scope.options);\n        // we use an object with merged default locale and scope override(if any)\n        $scope.locale = merge(\n          require(`../timePlannerLocales/time-planner-locale_${_localeId}`),\n          $scope.options.locale || {}\n        );\n        // fill segments for current options\n        $scope.segments = _getSegments();\n      }\n\n      // Get segments for planner, hours, week, dates range. Default is a week.\n      function _getSegments() {\n        switch ($scope.options.timeScope) {\n          case 'day':\n            return _getHours();\n            break;\n          case 'range':\n            // reserved for future use\n            break;\n          case 'week':\n          default:\n            return _getWeekDays();\n        }\n      }\n\n      // Method to generate hours labels\n      function _getHours() {\n        const hours = [];\n\n        for (let i = 0; i < 24; i++) {\n          hours.push(new TimeSegment({\n            name: i,\n            segmentType: 'hour',\n            disableTimetable: true\n          }));\n        }\n\n        return hours;\n      }\n\n      // Method to generate week days labels\n      // I use only days from locales. First day of the week is the same as Date() (0 - Sun)\n      function _getWeekDays() {\n        const\n          defaultWeek = [...$locale.DATETIME_FORMATS.SHORTDAY],\n          alteredWeek = defaultWeek.splice($scope.options.firstDay  || 0, defaultWeek.length),\n          preparedWeek = [...alteredWeek, ...defaultWeek],\n          segments = [];\n\n        preparedWeek.forEach(day => {\n          segments.push(new TimeSegment({\n            name: day,\n            segmentType: 'week-day',\n            disableTimetable: true\n          }));\n        });\n\n        return segments;\n      }\n\n    }];\n\n    return {\n      restrict: 'E',\n      scope: {\n        options: '=',\n        rows: '='\n      },\n      controller: controller,\n      template: template\n    };\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerContainer/timePlannerContainerDirective.js","import template from './timePlannerRowTemplate.html';\n\nangular\n  .module('timePlannerRowDirective', ['timeSegment', 'timetable'])\n  .directive('timePlannerRow', () => {\n    const controller = ['$scope', 'TimeSegment', 'Timetable', ($scope, TimeSegment, Timetable) => {\n      const _methods = {\n        week: {\n          fillSegments: _fillSegmentsForWeek,\n          setRange: _setRangeForDay\n        },\n        day: {\n          fillSegments: _fillSegmentsForDay,\n          setRange: _setRangeForHour\n        }\n      };\n\n      // INIT\n      $scope.$watchCollection('options', _prepareItems);\n\n      // Generate segments for each row\n      function _prepareItems() {\n        $scope.row.segments = [];\n        $scope.row.hours = 0;\n        $scope.$parent.segments.forEach((segment, index) => {\n          const timeSegment = new TimeSegment({\n            ...segment,\n            range: _methods[$scope.options.timeScope].setRange(index)\n          });\n\n          if (!$scope.row.disableTimetable) {\n            timeSegment.timetable = $scope.row.timetable && new Timetable($scope.row.timetable);\n            timeSegment.toggleDisabled(!timeSegment.timetable || !timeSegment.timetable.validate(timeSegment.range));\n          }\n\n          $scope.row.segments.push(timeSegment);\n        });\n        $scope.row.items.forEach(_methods[$scope.options.timeScope].fillSegments);\n      }\n\n      function _setRangeForDay(index) {\n        let\n          rangeFrom = new Date($scope.options.from),\n          rangeTo = new Date($scope.options.to),\n          firstDate = rangeFrom.getDate();\n\n        rangeFrom = rangeFrom.setDate(firstDate + index);\n        rangeTo = rangeTo.setDate(firstDate + index);\n        return [rangeFrom, rangeTo]\n      }\n\n      function _setRangeForHour(index) {\n        let\n          rangeFrom = new Date($scope.$parent.options.from),\n          rangeTo = new Date($scope.$parent.options.to);\n\n        rangeFrom = rangeFrom.setHours(index);\n        rangeTo = rangeTo.setHours(index);\n        return [rangeFrom, rangeTo];\n      }\n\n      // Fill each segment with items. This method is solely for week time scope\n      function _fillSegmentsForWeek(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end),\n          },\n          msInDay = 24 * 60 * 60 * 1000,\n          itemLength, firstDayNumber;\n\n        schedule.scheduledStart.setHours(0,0,0,0);\n        schedule.scheduledEnd.setHours(23,59,59,999);\n\n        schedule = _setBoundaries(schedule);\n        firstDayNumber = schedule.scheduledStart.getDay();\n\n        itemLength = Math.ceil(\n          Math.abs((schedule.scheduledStart.getTime() - schedule.scheduledEnd.getTime()) / msInDay)\n        );\n\n        if (!$scope.options.disableCounter) {\n          $scope.row.hours += itemLength * 8;\n        }\n\n        for (let i = 0; i < itemLength; i++) {\n          !$scope.row.segments[firstDayNumber + i].disabled &&\n          $scope.row.segments[firstDayNumber + i].addItem(item);\n        }\n      }\n\n      // Fill each segment with items. This method is solely for day time scope\n      function _fillSegmentsForDay(item) {\n        let\n          schedule = {\n            scheduledStart: new Date(item.scheduled_start),\n            scheduledEnd: new Date(item.scheduled_end)\n          },\n          itemLength, firstHour, overlap;\n\n        schedule = _setBoundaries(schedule);\n        firstHour = schedule.scheduledStart.getHours();\n        overlap = schedule.scheduledStart.getHours() > schedule.scheduledEnd.getHours();\n        itemLength = (overlap ? 24 : schedule.scheduledEnd.getHours()) - schedule.scheduledStart.getHours();\n        itemLength += schedule.scheduledEnd.getMinutes() === 0 ? 0 : 1; // if it ends with 00 - we don't count that hour\n\n        if (!$scope.options.disableCounter) {\n          $scope.row.hours += itemLength;\n        }\n\n        for (let i = 0; i < itemLength; i++) {\n          !$scope.row.segments[firstHour + i].disabled &&\n          $scope.row.segments[firstHour + i].addItem(item);\n        }\n      }\n\n      // Set boundaries for item inside the planner\n      function _setBoundaries(schedule) {\n        schedule.scheduledStart = schedule.scheduledStart < $scope.$parent.options.from ?\n          $scope.$parent.options.from : schedule.scheduledStart;\n\n        schedule.scheduledEnd = schedule.scheduledEnd > $scope.$parent.options.to ?\n          $scope.$parent.options.to : schedule.scheduledEnd;\n\n        return schedule;\n      }\n    }];\n\n    return {\n      restrict: 'A',\n      template: template,\n      controller: controller\n    };\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./src/timePlannerRow/timePlannerRowDirective.js","angular\n  .module('timeSegment', [])\n  .factory('TimeSegment', [() => {\n    class TimeSegment {\n      constructor(params) {\n        this.name = params.name;\n        this.segmentType = params.segmentType;\n        this.items = params.items || [];\n        this.range = params.range || [];\n        this.disabled = params.disabled || false;\n      }\n\n      addItem(item) {\n        this.items = [...this.items, item];\n      }\n\n      removeItem(itemForRemove) {\n        this.items = this.items.filter(item => item.id !== itemForRemove.id)\n      }\n\n      toggleDisabled(boolean) {\n        this.disabled = typeof boolean === 'undefined' ? !this.disabled : boolean;\n      }\n    }\n\n    return TimeSegment;\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timeSegment/timeSegmentService.js","angular\n  .module('timetable', [])\n  .factory('Timetable', [() => {\n    class Timetable {\n      constructor(params) {\n        this.start = [Number(params.start[0]), Number(params.start[1])];\n        this.end = [Number(params.end[0]), Number(params.end[1])];\n        this.breakStart = params.breakStart;\n        this.breakEnd = params.breakEnd;\n        this.weekAvailability = params.weekAvailability;\n      }\n\n      validate(range) {\n        const\n          startDate = new Date(range[0]),\n          endDate = new Date(range[1]),\n          weekDay = startDate.getDay(),\n          startHour = startDate.getHours(),\n          endHour = endDate.getHours(),\n          overlap = this.start[0] > this.end[0];\n\n        if (startHour === endHour) {\n          // if it's an hour, we need to validate hours and day\n          return this.weekAvailability[weekDay] &&\n            (overlap ?\n              (startHour >= this.start[0] && endHour < 24 || startHour >= 0 && endHour < this.end[0]) :\n              (startHour >= this.start[0] && endHour < this.end[0]));\n        } else {\n          // if it's a day, we need to validate only day\n          return this.weekAvailability[weekDay];\n        }\n      }\n    }\n\n    return Timetable;\n  }]);\n\n\n\n// WEBPACK FOOTER //\n// ./src/timetable/timetableService.js","(function(angular) {\n    'use strict';\n\n    function isDnDsSupported() {\n        return 'ondrag' in document.createElement('a');\n    }\n\n    function determineEffectAllowed(e) {\n        if(e.originalEvent) {\n          e.dataTransfer = e.originalEvent.dataTransfer;\n        }\n\n        // Chrome doesn't set dropEffect, so we have to work it out ourselves\n        if (typeof e.dataTransfer !== 'undefined' && e.dataTransfer.dropEffect === 'none') {\n            if (e.dataTransfer.effectAllowed === 'copy' ||\n                e.dataTransfer.effectAllowed === 'move') {\n                e.dataTransfer.dropEffect = e.dataTransfer.effectAllowed;\n            } else if (e.dataTransfer.effectAllowed === 'copyMove' || e.dataTransfer.effectAllowed === 'copymove') {\n                e.dataTransfer.dropEffect = e.ctrlKey ? 'copy' : 'move';\n            }\n        }\n    }\n\n    if (!isDnDsSupported()) {\n        angular.module('ang-drag-drop', []);\n        return;\n    }\n\n    var module = angular.module('ang-drag-drop', []);\n\n    module.directive('uiDraggable', ['$parse', '$rootScope', '$dragImage', function($parse, $rootScope, $dragImage) {\n        return function(scope, element, attrs) {\n            var isDragHandleUsed = false,\n                dragHandleClass,\n                draggingClass = attrs.draggingClass || 'on-dragging',\n                dragTarget;\n\n            element.attr('draggable', false);\n\n            scope.$watch(attrs.uiDraggable, function(newValue) {\n                if (newValue) {\n                    element.attr('draggable', newValue);\n                    element.bind('dragend', dragendHandler);\n                    element.bind('dragstart', dragstartHandler);\n                }\n                else {\n                    element.removeAttr('draggable');\n                    element.unbind('dragend', dragendHandler);\n                    element.unbind('dragstart', dragstartHandler);\n                }\n\n            });\n\n            if (angular.isString(attrs.dragHandleClass)) {\n                isDragHandleUsed = true;\n                dragHandleClass = attrs.dragHandleClass.trim() || 'drag-handle';\n\n                element.bind('mousedown', function(e) {\n                    dragTarget = e.target;\n                });\n            }\n\n            function dragendHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                setTimeout(function() {\n                    element.unbind('$destroy', dragendHandler);\n                }, 0);\n                var sendChannel = attrs.dragChannel || 'defaultchannel';\n                $rootScope.$broadcast('ANGULAR_DRAG_END', e, sendChannel);\n\n                determineEffectAllowed(e);\n\n                if (e.dataTransfer && e.dataTransfer.dropEffect !== 'none') {\n                    if (attrs.onDropSuccess) {\n                        var onDropSuccessFn = $parse(attrs.onDropSuccess);\n                        scope.$evalAsync(function() {\n                            onDropSuccessFn(scope, {$event: e});\n                        });\n                    }\n                }else if (e.dataTransfer && e.dataTransfer.dropEffect === 'none'){\n                    if (attrs.onDropFailure) {\n                        var onDropFailureFn = $parse(attrs.onDropFailure);\n                        scope.$evalAsync(function() {\n                            onDropFailureFn(scope, {$event: e});\n                        });\n                    }\n                }\n                element.removeClass(draggingClass);\n            }\n\n            function setDragElement(e, dragImageElementId) {\n                var dragImageElementFn;\n\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                dragImageElementFn = $parse(dragImageElementId);\n\n                scope.$apply(function() {\n                    var elementId = dragImageElementFn(scope, {$event: e}),\n                        dragElement;\n\n                    if (!(elementId && angular.isString(elementId))) {\n                        return;\n                    }\n\n                    dragElement = document.getElementById(elementId);\n\n                    if (!dragElement) {\n                        return;\n                    }\n\n                    e.dataTransfer.setDragImage(dragElement, 0, 0);\n                });\n            }\n\n            function dragstartHandler(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                var isDragAllowed = !isDragHandleUsed || dragTarget.classList.contains(dragHandleClass);\n\n                if (isDragAllowed) {\n                    var sendChannel = attrs.dragChannel || 'defaultchannel';\n                    var dragData = '';\n                    if (attrs.drag) {\n                        dragData = scope.$eval(attrs.drag);\n                    }\n\n                    var dragImage = attrs.dragImage || null;\n\n                    element.addClass(draggingClass);\n                    element.bind('$destroy', dragendHandler);\n\n                    //Code to make sure that the setDragImage is available. IE 10, 11, and Opera do not support setDragImage.\n                    var hasNativeDraggable = !(document.uniqueID || window.opera);\n\n                    //If there is a draggable image passed in, then set the image to be dragged.\n                    if (dragImage && hasNativeDraggable) {\n                        var dragImageFn = $parse(attrs.dragImage);\n                        scope.$apply(function() {\n                            var dragImageParameters = dragImageFn(scope, {$event: e});\n                            if (dragImageParameters) {\n                                if (angular.isString(dragImageParameters)) {\n                                    dragImageParameters = $dragImage.generate(dragImageParameters);\n                                }\n                                if (dragImageParameters.image) {\n                                    var xOffset = dragImageParameters.xOffset || 0,\n                                        yOffset = dragImageParameters.yOffset || 0;\n                                    e.dataTransfer.setDragImage(dragImageParameters.image, xOffset, yOffset);\n                                }\n                            }\n                        });\n                    } else if (attrs.dragImageElementId) {\n                        setDragElement(e, attrs.dragImageElementId);\n                    }\n\n                    var offset = {x: e.offsetX, y: e.offsetY};\n                    var transferDataObject = {data: dragData, channel: sendChannel, offset: offset};\n                    var transferDataText = angular.toJson(transferDataObject);\n\n                    e.dataTransfer.setData('text', transferDataText);\n                    e.dataTransfer.effectAllowed = 'copyMove';\n\n                    $rootScope.$broadcast('ANGULAR_DRAG_START', e, sendChannel, transferDataObject);\n                }\n                else {\n                    e.preventDefault();\n                }\n            }\n        };\n    }\n    ]);\n\n    module.directive('uiOnDrop', ['$parse', '$rootScope', function($parse, $rootScope) {\n        return function(scope, element, attr) {\n            var dragging = 0; //Ref. http://stackoverflow.com/a/10906204\n            var dropChannel = attr.dropChannel || 'defaultchannel';\n            var dragChannel = '';\n            var dragEnterClass = attr.dragEnterClass || 'on-drag-enter';\n            var dragHoverClass = attr.dragHoverClass || 'on-drag-hover';\n            var customDragEnterEvent = $parse(attr.onDragEnter);\n            var customDragLeaveEvent = $parse(attr.onDragLeave);\n\n            function calculateDropOffset(e) {\n                var offset = {\n                    x: e.offsetX,\n                    y: e.offsetY\n                };\n                var target = e.target;\n\n                while (target !== element[0]) {\n                    offset.x = offset.x + target.offsetLeft;\n                    offset.y = offset.y + target.offsetTop;\n\n                    target = target.offsetParent;\n                    if (!target) {\n                        return null;\n                    }\n                }\n\n                return offset;\n            }\n\n            function onDragOver(e) {\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                var uiOnDragOverFn = $parse(attr.uiOnDragOver);\n                scope.$evalAsync(function() {\n                    uiOnDragOverFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                return false;\n            }\n\n            function onDragLeave(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                dragging--;\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragLeaveEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.addClass(dragEnterClass);\n                    element.removeClass(dragHoverClass);\n                }\n\n                var uiOnDragLeaveFn = $parse(attr.uiOnDragLeave);\n                scope.$evalAsync(function() {\n                    uiOnDragLeaveFn(scope, {$event: e, $channel: dropChannel});\n                });\n            }\n\n            function onDragEnter(e) {\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n\n                if (dragging === 0) {\n                    scope.$evalAsync(function() {\n                        customDragEnterEvent(scope, {$event: e, $channel: dropChannel});\n                    });\n                    element.removeClass(dragEnterClass);\n                    element.addClass(dragHoverClass);\n                }\n                dragging++;\n\n                var uiOnDragEnterFn = $parse(attr.uiOnDragEnter);\n                scope.$evalAsync(function() {\n                    uiOnDragEnterFn(scope, {$event: e, $channel: dropChannel});\n                });\n\n                $rootScope.$broadcast('ANGULAR_HOVER', dragChannel);\n            }\n\n            function onDrop(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault(); // Necessary. Allows us to drop.\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation(); // Necessary. Allows us to drop.\n                }\n\n                var sendData = e.dataTransfer.getData('text');\n                sendData = angular.fromJson(sendData);\n\n                var dropOffset = calculateDropOffset(e);\n                \n                var position = dropOffset ? {\n                    x: dropOffset.x - sendData.offset.x,\n                    y: dropOffset.y - sendData.offset.y\n                } : null;\n                \n                determineEffectAllowed(e);\n\n                var uiOnDropFn = $parse(attr.uiOnDrop);\n                scope.$evalAsync(function() {\n                    uiOnDropFn(scope, {$data: sendData.data, $event: e, $channel: sendData.channel, $position: position});\n                });\n                element.removeClass(dragEnterClass);\n                dragging = 0;\n            }\n            \n            function isDragChannelAccepted(dragChannel, dropChannel) {\n                if (dropChannel === '*') {\n                    return true;\n                }\n\n                var channelMatchPattern = new RegExp('(\\\\s|[,])+(' + dragChannel + ')(\\\\s|[,])+', 'i');\n\n                return channelMatchPattern.test(',' + dropChannel + ',');\n            }\n\n            function preventNativeDnD(e) {\n                if(e.originalEvent) {\n                  e.dataTransfer = e.originalEvent.dataTransfer;\n                }\n\n                if (e.preventDefault) {\n                    e.preventDefault();\n                }\n                if (e.stopPropagation) {\n                    e.stopPropagation();\n                }\n                e.dataTransfer.dropEffect = 'none';\n                return false;\n            }\n\n            var deregisterDragStart = $rootScope.$on('ANGULAR_DRAG_START', function(_, e, channel, transferDataObject) {\n                dragChannel = channel;\n\n                var valid = true;\n\n                if (!isDragChannelAccepted(channel, dropChannel)) {\n                    valid = false;\n                }\n\n                if (valid && attr.dropValidate) {\n                    var validateFn = $parse(attr.dropValidate);\n                    valid = validateFn(scope, {\n                        $drop: {scope: scope, element: element},\n                        $event: e,\n                        $data: transferDataObject.data,\n                        $channel: transferDataObject.channel\n                    });\n                }\n\n                if (valid) {\n                    element.bind('dragover', onDragOver);\n                    element.bind('dragenter', onDragEnter);\n                    element.bind('dragleave', onDragLeave);\n                    element.bind('drop', onDrop);\n\n                    element.addClass(dragEnterClass);\n                } else {\n                    element.bind('dragover', preventNativeDnD);\n                    element.bind('dragenter', preventNativeDnD);\n                    element.bind('dragleave', preventNativeDnD);\n                    element.bind('drop', preventNativeDnD);\n\n                    element.removeClass(dragEnterClass);\n                }\n\n            });\n\n\n            var deregisterDragEnd = $rootScope.$on('ANGULAR_DRAG_END', function() {\n                element.unbind('dragover', onDragOver);\n                element.unbind('dragenter', onDragEnter);\n                element.unbind('dragleave', onDragLeave);\n\n                element.unbind('drop', onDrop);\n                element.removeClass(dragHoverClass);\n                element.removeClass(dragEnterClass);\n\n                element.unbind('dragover', preventNativeDnD);\n                element.unbind('dragenter', preventNativeDnD);\n                element.unbind('dragleave', preventNativeDnD);\n                element.unbind('drop', preventNativeDnD);\n            });\n\n            scope.$on('$destroy', function() {\n                deregisterDragStart();\n                deregisterDragEnd();\n            });\n\n\n            attr.$observe('dropChannel', function(value) {\n                if (value) {\n                    dropChannel = value;\n                }\n            });\n\n\n        };\n    }\n    ]);\n\n    module.constant('$dragImageConfig', {\n        height: 20,\n        width: 200,\n        padding: 10,\n        font: 'bold 11px Arial',\n        fontColor: '#eee8d5',\n        backgroundColor: '#93a1a1',\n        xOffset: 0,\n        yOffset: 0\n    });\n\n    module.service('$dragImage', ['$dragImageConfig', function(defaultConfig) {\n        var ELLIPSIS = '…';\n\n        function fitString(canvas, text, config) {\n            var width = canvas.measureText(text).width;\n            if (width < config.width) {\n                return text;\n            }\n            while (width + config.padding > config.width) {\n                text = text.substring(0, text.length - 1);\n                width = canvas.measureText(text + ELLIPSIS).width;\n            }\n            return text + ELLIPSIS;\n        }\n\n        this.generate = function(text, options) {\n            var config = angular.extend({}, defaultConfig, options || {});\n            var el = document.createElement('canvas');\n\n            el.height = config.height;\n            el.width = config.width;\n\n            var canvas = el.getContext('2d');\n\n            canvas.fillStyle = config.backgroundColor;\n            canvas.fillRect(0, 0, config.width, config.height);\n            canvas.font = config.font;\n            canvas.fillStyle = config.fontColor;\n\n            var title = fitString(canvas, text, config);\n            canvas.fillText(title, 4, config.padding + 4);\n\n            var image = new Image();\n            image.src = el.toDataURL();\n\n            return {\n                image: image,\n                xOffset: config.xOffset,\n                yOffset: config.yOffset\n            };\n        };\n    }\n    ]);\n\n}(angular));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-native-dragdrop/draganddrop.js\n// module id = 8\n// module chunks = 0","require('./draganddrop');\nmodule.exports = 'ang-drag-drop';\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular-native-dragdrop/index.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nimport './timePlannerContainer/timePlannerContainerDirective';\nimport './timePlannerRow/timePlannerRowDirective';\nimport './timePlannerCell/timePlannerCellDirective';\nimport './timeSegment/timeSegmentService';\nimport './timetable/timetableService';\nimport './currentTimeMarker/currentTimeMarkerDirective';\n\nimport '../styles/angular-time-planner.scss';\n\nangular\n  .module('angularTimePlanner', ['timePlannerContainerDirective', 'timePlannerRowDirective', 'timePlannerCellDirective'])\n  .constant('LOCALES', {\n    DEFAULT: 'en-us',\n    AVAILABLE: ['en-us']\n  });\n\n\n\n// WEBPACK FOOTER //\n// ./src/angular-time-planner.js","'use strict';\n\nvar isMergeableObject = function isMergeableObject(value) {\n\treturn isNonNullObject(value)\n\t\t&& !isSpecial(value)\n};\n\nfunction isNonNullObject(value) {\n\treturn !!value && typeof value === 'object'\n}\n\nfunction isSpecial(value) {\n\tvar stringValue = Object.prototype.toString.call(value);\n\n\treturn stringValue === '[object RegExp]'\n\t\t|| stringValue === '[object Date]'\n\t\t|| isReactElement(value)\n}\n\n// see https://github.com/facebook/react/blob/b5ac963fb791d1298e7f396236383bc955f916c1/src/isomorphic/classic/element/ReactElement.js#L21-L25\nvar canUseSymbol = typeof Symbol === 'function' && Symbol.for;\nvar REACT_ELEMENT_TYPE = canUseSymbol ? Symbol.for('react.element') : 0xeac7;\n\nfunction isReactElement(value) {\n\treturn value.$$typeof === REACT_ELEMENT_TYPE\n}\n\nfunction emptyTarget(val) {\n    return Array.isArray(val) ? [] : {}\n}\n\nfunction cloneIfNecessary(value, optionsArgument) {\n    var clone = optionsArgument && optionsArgument.clone === true;\n    return (clone && isMergeableObject(value)) ? deepmerge(emptyTarget(value), value, optionsArgument) : value\n}\n\nfunction defaultArrayMerge(target, source, optionsArgument) {\n    var destination = target.slice();\n    source.forEach(function(e, i) {\n        if (typeof destination[i] === 'undefined') {\n            destination[i] = cloneIfNecessary(e, optionsArgument);\n        } else if (isMergeableObject(e)) {\n            destination[i] = deepmerge(target[i], e, optionsArgument);\n        } else if (target.indexOf(e) === -1) {\n            destination.push(cloneIfNecessary(e, optionsArgument));\n        }\n    });\n    return destination\n}\n\nfunction mergeObject(target, source, optionsArgument) {\n    var destination = {};\n    if (isMergeableObject(target)) {\n        Object.keys(target).forEach(function(key) {\n            destination[key] = cloneIfNecessary(target[key], optionsArgument);\n        });\n    }\n    Object.keys(source).forEach(function(key) {\n        if (!isMergeableObject(source[key]) || !target[key]) {\n            destination[key] = cloneIfNecessary(source[key], optionsArgument);\n        } else {\n            destination[key] = deepmerge(target[key], source[key], optionsArgument);\n        }\n    });\n    return destination\n}\n\nfunction deepmerge(target, source, optionsArgument) {\n    var sourceIsArray = Array.isArray(source);\n    var targetIsArray = Array.isArray(target);\n    var options = optionsArgument || { arrayMerge: defaultArrayMerge };\n    var sourceAndTargetTypesMatch = sourceIsArray === targetIsArray;\n\n    if (!sourceAndTargetTypesMatch) {\n        return cloneIfNecessary(source, optionsArgument)\n    } else if (sourceIsArray) {\n        var arrayMerge = options.arrayMerge || defaultArrayMerge;\n        return arrayMerge(target, source, optionsArgument)\n    } else {\n        return mergeObject(target, source, optionsArgument)\n    }\n}\n\ndeepmerge.all = function deepmergeAll(array, optionsArgument) {\n    if (!Array.isArray(array) || array.length < 2) {\n        throw new Error('first argument should be an array with at least two elements')\n    }\n\n    // we are sure there are at least 2 values, so it is safe to have no initial value\n    return array.reduce(function(prev, next) {\n        return deepmerge(prev, next, optionsArgument)\n    })\n};\n\nvar deepmerge_1 = deepmerge;\n\nmodule.exports = deepmerge_1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/deepmerge/dist/cjs.js\n// module id = 11\n// module chunks = 0","module.exports = \"<div class=atp-segment-item-wrapper><div class=atp-segment-item ng-repeat=\\\"item in segment.items\\\" ng-class=\\\"[item.segmentType, {'highlighted': (item.id === highlightedItem.id)}]\\\" ng-mouseenter=onHoverEvent(item) ng-mouseleave=onHoverEvent() ng-click=onClickEvent(item)></div></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerCell/timePlannerCellTemplate.html\n// module id = 12\n// module chunks = 0","module.exports = \"<div class=atp-container><div class=atp-head><div class=atp-row><div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{locale.labels.rowTitle}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable><span class=atpc-label>{{locale.labels.timetableTitle}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=!options.disableCounter><span class=atpc-label>{{locale.labels.counterTitle.hours}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                      'hour-segment': options.timeScope === 'day'}\\\"><span class=atpc-label>{{segment.name}}</span></div></div></div><div class=atp-items-wrapper><div class=atp-row ng-repeat=\\\"row in rows\\\" drop-channel=\\\"{{options.editable && row.editable && options.dropChannel}}\\\" ui-on-drop=\\\"onDropEvent($data, row.id)\\\" time-planner-row></div><current-time-marker class=atp-current-time-marker ng-if=!options.disableCurrentTimeMarker /></div></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerContainer/timePlannerContainerTemplate.html\n// module id = 13\n// module chunks = 0","module.exports = \"<div class=\\\"atp-cell atpr-title\\\"><span class=atpc-label>{{row.title}}</span></div><div class=\\\"atp-cell atpr-timetable\\\" ng-if=!options.disableTimetable><span class=atpc-label>{{row.timetable.start ? row.timetable.start.join(':') + \\\" - \\\" + row.timetable.end.join(':') : 'N/A'}}</span></div><div class=\\\"atp-cell atpr-counter\\\" ng-if=options.needCounter><span class=atpc-label>{{row.hours || 0}}</span></div><div class=\\\"atp-cell atp-segment\\\" ng-repeat=\\\"segment in row.segments\\\" ng-class=\\\"{'week-day-segment': options.timeScope === 'week',\\n                'hour-segment': options.timeScope === 'day',\\n                'unavailable-segment': segment.disabled}\\\" time-planner-cell></div>\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerRow/timePlannerRowTemplate.html\n// module id = 14\n// module chunks = 0","var map = {\n\t\"./time-planner-locale_en-us\": 0,\n\t\"./time-planner-locale_en-us.js\": 0\n};\nfunction webpackContext(req) {\n\treturn __webpack_require__(webpackContextResolve(req));\n};\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) // check for number or string\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\treturn id;\n};\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/timePlannerLocales ^\\.\\/time\\-planner\\-locale_.*$\n// module id = 15\n// module chunks = 0"],"sourceRoot":""}